throws if call by any account other than the curator.
controller closes deposit subround and allows users to withdraw nac from the subround.
stakes tokens from the caller for a particular user and rewards them with credit.
overrided destructor companion.
"set the minimum bet for oraclize, with the option to force all bets through oraclize or never use it."
uint256 _envelopeid.
this function creates drct tokens for the short and long parties and ensures they have funded the contract with the correct amount of erc20 tokens a and b.
"public function to create a token, limited to one token per hour."
change multisig wallet in case it need.
withdraw all ether in this contract back to the wallet.
challenge a clear request.
modifier to make a function callable only when the contract is transferable.
transfer tokens to multiple address.
that function calculates profit updates for a user by incrementing from the last calculated round to the current round and calculates the current user account state using a specific algorithm.
creates a new auction.
used to approve an address and call a function on it in the same transaction.
create new policy.
public order placement - continue place an order in 'needsgas ' state.
accept transaction.
special function can only be called by pre-buy and only during the pre-crowdsale period.
return a dynamic array of the ids of all tokens which be own by (_owner).
called by a security token to notify the registry it be use a module.
find the _claimed_ tile surround a tile.
throws if player do not own the hero.
finalize crowd-sale.
"calculate the custom fee base on buyer, seller, game token or combo of these."
change the cold wallet2 address.
allows the owner to remove addresses that can bypass the transfer lock.
deposit lrc for eth.
this function retrieves kyc data from a byte array.
value uint256 value of _checkpoints at _block.
"the function allows for the purchase of tokens with a minimum of 0.001 ether in the public, pre-ico, and private sale."
"removes id from array, reduce array length by one."
sets new min contribution amount.
add or remove in lockaddress (blacklist).
throws if call when crowdsale have close.
schedule oraclize call for payout.
pre-sale configuration.
function to set the discount member as active or not for one of the four events.
only allow by financial officer.
allow to change the current stage.
finalizes the sale.
"freezes or unfreezes an account, preventing or allowing it to send or receive tokens."
owner can change the contract that allows minting.
sets a new start date as long as the token has not started yet.
allow destruction of contract only if balance be empty.
saftey checks for addition tasks.
"check player profit, bet size and player number be within range."
sets a store to be used by the manager.
returns current price of a collectible (erc721) on sale.
get the account balance of another account with address _account.
erc20 method to transfer token to a specified address.
only be called by the owner and will revert if called by any other account.
retrieves a associate with an _address.
transfer sender's token to a given address.
pause or unpause the contract in case a problem is detected.
mint tokens and approve the passed address to spend the minted amount of tokens.
"internal function to accept, add additionals and pay a request as a payer."
create a tower with specified parameters.
throws if call by any account other than the owner or the admin.
returns the remain possibled sale amount for a give wallet.
the function allows users to claim their tokens from the ibc vault.
enable / disable token transfer.
this code should be moved to a library.
change needed for refactoring enchant items to have a recommended bid which increases the likelihood of obtaining the item.
the smart contract code triggers a predator attack.
transfer tokens from investbalance to balncec for trade.
add multiple address into the whitelist.
creates a crowdsale with initial condition.
this function is for pushing pre-ico records.
gets the deed id of the specified address at the specified index.
change current price of carnita.
user can claim tokens once the crowdsale has been finalized.
buy key.
unbond delegator's current stake.
returns the storage location of crowdsale's end sale rate.
the date in which all tokens be transferable for the holder.
send value of pendingreturns to the specified address.
token purchase function directly through ico smart contract.
check if account be the authorized minter.
take win money or money for cancel game.
update of reservedwei for withdraw.
calculate the current price of an order (convenience function).
allows an older owner to add a new owner instantly.
checks how much of an order can be filled.
do withdrawal.
function to participate in contribution period.
remove policy rule.
calculates total amount of tokens purchase without bonus conversion.
locks the shares to prevent changes by contract owners.
markers can add product account and sha3 (item public key).
"adds two numbers, ensuring no overflow occurs."
creates a new special card with the given name id.
preliminary game result before real transaction be mine.
"allows the admin to finalize the crowdsale, distribute reserve tokens, and unlock the token for transfer."
check how many ace tokens a spender is allowed to spend from an owner.
issue new neumarks to msg. sender.
create specify number of tokens and transfer to destination.
will initiate the next game by clear most of the data and calculate the payouts.
returns the total number of promotions.
overloaded version of the transferfrom function.
token distribution to ecosystem.
returns player information based on their address.
non overflow multiplication.
finish voting on a proposal.
"check bet on dozen bet type: dozen input: 0 first, 1 second, 2 third."
clears record of a contributor from a group's record.
withdraw function to transfer the balance of the contract to the owner's account.
burns basket tokens.
enable token transfer for everyone.
returns true if the campaign is in progress.
sets a new droplet token exchange rate.
this modifier ensures that the swap can only occur before a certain time and that the address being swapped to is not the designated swap address.
only way to give blackpearlwhale eth be via by use fallback.
get payer of a request.
the balance of a given address.
allows users to buy tickets for a lottery using tokens and limits the number of tokens that can be bought per round.
transfers value tokens to to address.
function to mint tokens with a lock.
"set the cooldown end time for the given ether dog, based on its current cooldown index."
allows the owner of the ico to extend the deadline of the current ico stage.
merge (call from our mine leader).
returns the maximum size of the list.
update the prenup agreement only if both partners have previously agreed to it.
calculate token exchange rate for pre-ico and ico.
only the owner or crowdsale can execute the function for closing the crowdsale.
"process payment function for ico with pre-sale and main sale periods, calculating token amounts and discounts."
returns the amount of tokens that have been sold.
"during the ico phase, the owner will allocate tokens once kyc is complete and funds are deposited."
function to buy an offer by accepting a given quantity of an offer.
approves token mint for specified investor.
change basic ico parameters.
destroys a loan and can only be called by the borrower in pending status to undo an accidental or regretful approval.
check if contract has ended.
check user 's reb balance tier.
place a new order to the smart contract.
contribute function accepts incoming payments and tracks balance for each contributor.
lists an indexed bytes collection from start or end.
finalizes the sale.
set token function info.
reverts if beneficiary is not whitelisted.
abandons the ico and returns funds to shareholders.
buy tokens with referral address and selected rate during regular phase.
withdraw function accumulates balance for a payee.
deactivate  token sale function.
"by setting the performer for pending tasks, the function allows clients to assign performers for their tasks."
claim tokens daily with verification from an eth account.
callback function from oraclize to determine the winning team and enable refunds if necessary.
allows someone to withdraw as much ether from the smart contract as they have available balance.
checks if the specified address is whitelisted.
only shareholders can execute a function with this modifier.
"create a new edition with a given name, collection id, and world quantity, and add it to the list of all editions and the corresponding collection's edition ids."
throws away your stash (down the drain ;)).
extend parent behavior to require purchase to respect the contributor's fund cap.
this function appends a uint to a string in solidity.
check whether the address is in the list of managers.
public command to become a masternode by sending required balance in ether to the contract.
function to calculate the total amount of ether the active player will receive including player fee.
schedule oraclize call for payout.
find out what the result would be of a prospective purchase.
executes a transaction from this contract.
function to allow owner to transfer out accidentally sent erc20 tokens.
returns a list of all panda ids assigned to an address.
add a single address to the whitelist in the smart contract code.
function can be used to buy tokens by third-party investors.
delete all revisions of a blob and replace it with a new one.
add new defence parts to the contract's inventory.
"create every mint of an angel card with specific series, price, and battle power, while checking for series availability and payment validation."
invalidate a crowdsale purchase if something is wrong with it.
allow another ethereum account to spend ace tokens from your account.
withdraws deposited amount if conditions are met.
remove a member who exceed the cap.
register a certificate administrator.
"parse a message in a smart contract to extract the recipient address, amount, and transaction hash from the message bytes."
add a new token with a specified amount and price.
checks that a rate be valid.
"destroy a certain amount of tokens and return true if successful, false otherwise."
add chunk 3 / 7 to the whitelist.
"upgrade an old converter to the latest version, but ownership must be transferred to the upgrader before calling this function, otherwise it will throw an error."
update a blob's latest revision
return the price of an interval.
a buyin function that allows users to purchase tokens during phase 1.
retrieve all gift template ids from the smart contract.
"gets the property data including owner's address, ethereum and pxl sale prices, last update timestamp, whether it is in private mode or not, when it becomes public timestamp, and flag."
"creates a new pizza with a given name, owner, and price, and assigns it a unique id."
"this method should not be called by smart contract code as it is expensive and returns a dynamic array only supported for web3 calls, not contract-to-contract calls."
withdraw all ether in this contract.
accepts ether and creates new sme tokens.
"set a user's balance to zero, adjust supply and dev allocation as well."
get the owner of a token handle.
gets the nickname for an account address.
manually trigger the steal by script.
registers a new erc20 token.
"this smart contract initializes core parameters on deployment, including timestamp values as uint64s to allow for millennia."
overriden to add finalization logic.
"function to buy tokens with bonus, with conditions for duration and eligibility."
assigns a new address to act as the covmanager.
withdraws the contract's balance to a specified wallet address and transfers ownership of the token to the sender.
allows backers to withdraw their funds if the crowdsale is unsuccessful and allows the owner to send the amount raised to the beneficiary.
checks if tokens are not locked and allows transfer of tokens from the sender to the specified address.
sets a new admin address
distribute tokens to multiple address.
"convert tokens to other tokens in the standard network using a predefined conversion path and transfer the resulting tokens to a target account, with the converter owning the source tokens."
this function calculates the dynamic value of ether in reserve according to the crr requirement.
allows the owner of the contract to shorten the deadline of the current ico stage.
helper function to get specific properties of all of the personal stake create by an address.
set the new endtime of the released time of an account.
is there any transfer in schedule.
erc20 versions.
returns an array containing all token addresses.
execute options during the ico token purchase.
round two sale period.
erc20 tokens be not design to hold any other tokens on their balance.
send ether to another wallet.
advisors tokens accrual.
the getter for pause contract variable.
send tokens which will be freeze for specified time.
"transfer the value of an escrow, minus the fee, minus the gas cost incurred by the relay."
delegate stake towards a specific address.
buy wanchain token normally.
first step to withdraw : players must confirm their pending divs before withdraw this function sum the pending balance (pendingdividends and the pending divs from playerscore).
allows admin or ops to create new allocations for a specific account.
sets the address.
by the address of client set performer for pending task.
allows the owner to stop the trade able tokens.
function for using plat token for payments from approveandcall.
check if the rlp item is data.
makes an offer to trade msg. value.
creates a new deed with a unique name and assigns it to the owner.
initialise the contract.
mint token from pool of mintable tokens.
transfer the balance from owner's account to advisor's account.
put a cutie up for plugin feature with signature.
mint new tokens through a sale agent contract interface.
create a rabbit with a certain grade and assign an owner to it.
"burn the provided _value, restricted to the contract owner."
approves a migration and suicides the entire smart contract.
mint tokens and add them to the balance of the message. sender.
claim ibc.
workorder life cycle.
remove the blacklist member.
an internal method that helps in generating new nft collectibles.
customer buy a rabbit.
checks if a given address currently has transfer approval for a particular cscpresaleitem.
allow only registrants to exec the function.
director can alter the maximum time of storage retention.
owner set houseedge.
withdraw the amount of token that be remain in this contract.
update ether cost for various type of visit.
returns true if date in pre-ico period.
math function use to calculate vest curve.
freeze the account's balance.
function to extract mistakenly sent erc20 tokens send to crowdsale contract and to extract unsold cc tokens.
this function allows both parties to exit.
remove address from qualified partner list.
mint and burn.
executes a number of call script.
initialize to prepare for sale.
dev - use this to remove admins.
calculating token price.
calculate the expected win amount after subtracting the house edge.
add a new investor to the whitelist.
read user purchase details at a specific index from all purchases made by the user.
do the real transfer without any condition check.
validates if new application's deployer is allowed to upgrade the current app.
"players, use this function to push your profile to a single game if you have registered a profile before the game is released or set the all bool to false when registering."
calls the contract's finalization function.
rank of production.
method to view the current counter store in the contract.
use all available balance to buy in.
create mobsters.
calculate the amount of keys that can be bought with a given amount of eth at a certain stage.
list global audit document.
mint token (uncapped minting).
call by arbiter when winner be decide * pass in high num for winnerbal for tie game.
distribute 10m tokens proportionally amongst all investors.
prevent contract from interact with goalbonanzaplus.
we can create zodiacs with different generations.
transfer the unsold tokens to the owner main wallet.
add chunk 3 / 7 to the whitelist.
createissuance create local currency issuance sale.
returns the total number of dog currently in existence.
signature bounty drop batch by single amount.
function that be call when transaction target be a contract.
submit the properties of a bid to reveal them.
"to withdraw or reinvest interest income, input your address in the '_to' field."
"update address for name, or create new name-address map."
internal implementation of getwager ().
function to recover the fund on the contract.
distribute profit among shareholders and players in top 10.
kill method.
allows an owner to confirm freezing process.
to call to start the token's sale.
set crb token address here.
allows the current owner to transfer token's control to a new owner.
get all tokens of a particular address.
the code is for debugging purposes only and should be removed before going live.
prefix a bytes32 value with x19ethereum signed message :.
fix for short address attack.
"process a combat, it be expensive, so provide enough gas."
modifier to make a function callable only when the transfer be enable.
allows for a certain amount of tokens to be spent on behalf of the account owner.
"approve a contract address for mint tokens and transfer tokens, when approved by the owner."
allow the owner to set the fee.
returns array of all the owners of all of pixels.
returns early purchase amount by purchaser's address.
"erc20 specific 'transferfrom ' be only allow, if contract be not in paused state."
withdraw tokens to owner.
scarcecoin - modified the correct technical term mint to a well know term mint for market purpose.
get the amount of purchase egg of a struct.
calculates the amount of ether a user will receive as a reward for burning tokens.
get all the remain original tokens belong to a serial of account before this time lock.
sender exit from the game.
enable transfer function to allow token transfer after sale and before listing.
get the number of beneficiaries in the vest contract.
check the total of vested tokens still locked for a particular address.
"allocates a certain amount of tokens to a specific address, with different allocation types and bonus eligibility, and returns whether the allocation was successful or not."
called only by seller child contract when a name be purchase.
method to purchase tokens for a beneficiary and forward funds in a crowdsale contract.
make transferfrom () pausable.
buy ndc with ether.
called by the owner of the contract to finalize the ico and redistribute funds (if any).
withdraw contributed funds if the ico has ended and the goal has not been reached.
allow anyone send fund to the contract.
calculate the amount for a charger by iterating through investments and adding up the balances of those with a charger id and balance greater than or equal to 1 ether.
make a bet.
disable transfers and can only be called by the owner of the contract.
"this smart contract code allows for transferring tokens, with the added functionality of being able to pause the transfer if necessary."
called by the server to reject game session created by player with address _player address.
returns the cap of a specific user.
load early purchase from the contract keep track of them.
function ends the crowdfund and transfers remaining tokens to the designated address.
token holders can exchange their tokens for ether through the buyback function.
"the function configures a crowdsale by setting initial token values and transfer agents, and creating a new crowdsale token with specified parameters."
checks whether an incoming transaction from the buytokens function is valid or not.
special manager disactivation.
calculate auction price and transfer winnings.
"handle tokens and distribute them to hot wallets, sending excess tokens to the cold wallet if the limit is exceeded."
modifier to ensure that a function be only call by the owner.
a private function for trading balances with fees that can only be called from the trade() function.
gets the balance of the specified address less great of escrow tokens and free signup tokens.
passes asset ownership to specified address.
initialize auctions parameters.
start the public ico.
decreases the approval of the spender.
function allows for transfer of tokens between two addresses with preauthorization and allowance checks.
finalizes the previous roll and pay out user if they win.
mints new tokens and rewards the caller based on their coin age.
throws if contract be not pause.
buy a name for a player in a winner dataset
"check if a user is the winner of a horse race and returns the name of the winning horse (e.g. ltc, btc, eth, etc.)."
burn a specific amount of tokens assigned to a given address.
batch transfer from function to transfer multiple tokens from the same from address to the same to address.
create a new group with specified parameters.
buy a spot at the given coordinates and gain points for every connected spot of your color share line with this spot in a game.
calculates the token price during an auction based on elapsed time and decay rate.
starts the auction.
gets number of remain tokens.
function to remove a minter.
"deposit function divides the deposit by feedivisor, adds divs and sends a donation, then uses the remaining amount to buy p3d tokens under the sender's masternode."
"checks to see if two puppies can breed together, including checks for ownership and siring approvals."
calculate the fixed exponentiation of the input using a predefined mathematical formula.
get the customer's transaction count for a specific payment amount in mcw.
accept an offer and create a new subscription based on it.
calculates unclaimed fee of the fund manager.
this function returns all the relevant information about a specific avatar.
load early purchases from the contract and keep track of them.
compute the gameplayercoin bonus accord to the investment period.
finalize the liability in the smart contract.
set lock period for team's wallet.
accepts ether and creates new sme tokens.
calculate and process the timelock state of an account.
"scan for a game 10 minutes old, if found, abort the game and return funds."
current / next campaign charity balance.
allow owner to exclude certain recipients from having their locked token balance unlocked.
gets the lockup amount tuple of the specified address.
this modifier ensures that the address provided is not a zero address.
update the price tier options for table stakes.
check whether the _operator address is authorized to manage the tokens held by the _tokenholder address.
extend parent behavior to require purchase to have minimum wei amount and be within overall max wei amount.
withdraw your fund.
"appends an address to a data storage, updating the head and tail pointers accordingly."
burns the rest of the tokens after the crowdsale end
"function to remove users from a group, only accessible by the contract owner and requires the group to exist."
retrieves the name of an index.
initialize auctions parameters.
allow destruction of contract only if balance be empty.
returns profit for sell give number of outcome tokens.
overrides crowdsale createtokencontract to prevent creation of a new token.
override finalizablecrowdsale finalization to prevent further mint after ico end.
allows the owner to set the crowdsale address.
"creates a passage with specified user notes, dividers, and lengths, and adds the donation to the milestone value."
transfer tokens from the caller to a new holder in a smart contract.
get current rate from oraclize and transfer tokens or start unsold tokens allocation.
change ownership of the ranch.
get a certain number of block in descend order.
manage the state machine for a token sale.
"buy function for ico participation with sender address, value and boolean parameter."
get the late token contract address.
produces the mine process and sends rewards to dao and fund.
checks if an account is the platform manager.
helper function actually perform the burn of tokens.
"calculate the total cost, processing fee, original owner fee, dividend pool fee, and referrer fee for buying tokens."
"transfer ownership of the smart contract to a new owner in a two-step process, where the new owner is set and then required to accept the transfer."
sets the address of the wallet where crowdsale proceeds end up.
"this smart contract function allows users to decline a pending transaction if they meet certain access requirements and the transaction is in the ""in process"" state."
withdraw allow the owner of the contract to withdraw all ether collect by bell ringers.
set the csc erc721 contract.
set minimal amount of ether which can be use to buy tokens.
sets the kybernetwork contract address.
returns the amount of tokens approved by the owner that can be transferred to the spender's account.
upgrade the contract for the given contract identifier to a new version.
add an erc20 token contract address to the list of whitelisted tokens.
transfer token with timelocks.
sets or reaffirms the approved address for a war.
gets all authorized addresses.
purchase dgx gold.
get businesses per city.
check to see if section is available for purchase.
include a modifier that allows for minting functionality.
a function to send crowdsale tokens to a specified address.
the token fallback function serves as an entry point for users to transfer tokens to this contract.
update all weapon detail.
allows the current admin to transfer control of the contract to a new admin.
explicit getter for balance.
unfreeze the amount of tokens by the owner.
release all the bet back to the bettors if the oracle result can not be verify.
"distribute tokens to multiple addresses, with various checks for balance, frozen accounts, and validity of addresses."
get the claimable tokens for the sender based on their vested token grants.
buy tokens from the owner.
set double claim segment slash amount.
mints new tokens.
convenience function to assign bounties/bonds for multiple questions and withdraw all funds.
finalize the fundraiser if enddate have pass or if hardcap be reach.
allow contract owner to claim their mint.
setup the packagesale parameters.
register device on the atonomi network.
reveal the bet of a player in a game by providing the same player secret that was passed to create game.
owner can mark a customer's tx of payment for mcw as spent.
assigns a bounty to a specified account if their balance is greater than zero and the bounty amount does not exceed a certain limit.
delegate stake towards a specific address.
transfer token for a specified address before swap.
true iff subtract y from x will not overflow in the negative direction.
t the addition / removal of master address.
admin initiates a request to change the minimum and maximum amount that any trueusd user can burn.
withdraw foreign tokens from this contract.
regular end game session implementation.
only owner proposes to transfer control of the contract to a new owner.
"a refund function that can only be executed during an emergency stop, checks the state and balance of the investor, deletes the balance, and refunds the investor."
should only be call when first set an allowance.
"withdraw a pledged amount and authorizes a payment to be made from the vault, which can be used by the owner."
transfer tokens from allowance.
this function returns a different conversion rate while in presale.
this modifier restricts access to the controller only.
"since symbol be pass into the erc721 token constructor, it 's not store in the codexrecordproxy contract."
"return the latest data on price, jackpot, charity balance, deadline, presses, and last presser."
allow transfer of contract ownership.
time leave before the crodsale end.
"owner can start new token sale, to mint miss tokens by use this function, but not more often than once per month."
make payment to initiate loan.
internal private function.
refund transaction - return the bet amount of a roll that be not process in due timeframe (100 ethereum block).
1y locked balance for an account.
"purchase a company with a specified name from the user, ensuring that the company is on sale, the price is correct, and the buyer has the required super privilege count."
"only owner, admin or member can change member's name."
investor can reject withdraw investment.
calculates the exhaustion of a token after a battle and returns the result using the gene contract's exhaust after battle function.
internal transfer function.
return the address of the contract owner.
the function allows the contract owner to set the coin value per 1 ether.
throws if called by any account other than the owner or manager.
mine your own 0xbtclove functions ! !.
finish ico function can be called by creator or anyone when ico is finished.
this one try an infinite loop (another fail.
accepts a pending payment and forwards the payment amount to the sales wallet.
add new investment to investors storage.
declare the failure of the crowdsale and stop accepting eth from participants.
pay dividends to parent of a deed.
blacklist erc20 or erc223 tokens.
set governance fee
allows to send a bid to the auction.
"once the auction end have be reach, we distribute the ether."
get the price or token value for an ether based on the current time and sale status.
calculate the length of an rlp item based on its encoding format.
"returns the index address, function selectors, and implementation address of a specific version."
remove a fabric by its address from the list of active fabrics.
entry point for the buy of cak tokens.
transfer the wedu token.
must be called after the crowdsale has ended to perform additional finalization tasks.
all contract calls are banned from the buy function.
issue token take from ethfunddeposit to user.
withdraw tokens amount within vest rule for reserved wallet.
creates a new element with the given name and id.
check balance of hold specific tokens.
throws if called by any account other than the owner or control.
subtracts the service fee in ethers.
the function releases a quarter of tokens (25 tokens) to two founders every quarter.
allows transfer only when contract be not pause.
the function validates proposed throne rules with various conditions.
"calculate the amount that has already vested for a specific erc20 token based on the current balance, released amount, and vesting schedule."
allow the potential owner confirm ownership of the contract.
generate proof set function for off-chain proof derivation.
simply a boolean to indicate this be the contract we expect to be.
this function creates a local currency issuance sale.
"claim nxc tokens for backers who have not received them yet, but if the limit has not been reached, the transaction will fail."
returns a list of all warrior ids assigned to an address.
overrides internal transfer due to frozen account check.
change endtime.
check customer's order value and send promo tokens based on received amount of tokens and eth.
throw if the blob be not transferable.
"sets the total max amount in eth for the account to hold, any exceed fund will be send to the coldwallet."
"this function emits events with specified topics and data, and updates the pointer to the end of the emits action request in memory."
"check if two cuties can breed together based on ownership and breed approvals, without checking if both cuties are ready for breeding."
"call by the owner to unlock private fund, return to normal state."
transfers token owned by this contract to another address.
"buy a new block that is not owned by anyone, with certain requirements and calculations for price and distribution of funds."
"allows users to buy a sale item, complete the sale, and transfer ownership of the nft if enough ether is supplied."
this function is executed whenever a reload order is placed to withdraw earnings and execute the core function if the current time is within the round gap or after the round has ended.
change the target address and can only be executed by the owner.
an internal method that create a new ship and store it.
upload data in bytes to the smart contract in multiple transactions until the entire file is stored in the contract.
make a deposit of tokens on the contract.
checks if a give address currently have transferapproval for a particular pony.
start a competition with specified parameters and emit an event with the competition id.
mint function allows only the owner to mint tokens and checks if the total supply plus the amount to be minted is less than or equal to the maximum token limit.
allow first buyers contract to transfer bspt without fee.
owner call after endlottery.
this function starts a new monarchy game if certain conditions are met.
transfer or burning of tokens.
payment fallback function ensures that the payment made in btc does not exceed the maximum ether cap.
cancel a sto contract proposal if the bid have n't be accept.
"a function that adds a new donkey to the contract and updates the ranking based on the amount invested, with a maximum deposit limit and a fee."
mints tokens to a beneficiary address.
function to get the price of hkg per 1 eth for the current moment in time based on different milestones.
admin function for transferring coins between two addresses.
"return all the relevant information about a specific puppy, including its gestation status, cooldown index, birth time, matron and sire ids, generation, and genes."
transfer the balance from sender's account to another one.
a smart contract function for regulators to start a winery product by linking harvest and winery operation track ids with producer and winery off-chain identities.
function to transfer tokens to a specified beneficiary address from the source of tokens.
get info about specific group.
request refund function.
returns number of tokens in circulation.
restricts call to owner.
allows buyers to claim the tokens they've purchased.
sets a new end date for the contract as long as the current end date has not been reached.
"show user's current marketplace information and configuration, as well as some global configurations."
allows anyone to sign up an unofficial application.
"creates a new promo collectible with the given name, with given _price and assign it to an address."
reverts if called after the sale has been initialized.
"transfers a token own by another address, for which the call address have previously be grant transfer approval by the owner."
allows investors to buy etc tokens by sending eth and automatically receive tokens to the provided address.
add a new company with the given name.
for create player.
accept the ownership from the previous owner.
transfer _value etheres to _to.
set a new owner.
extracts 256-bit worth of data from the bytes stream.
call by owner for transfer tokens.
remove a stage from sale.
checks whether an incoming transaction from the buytokens function be valid or not.
return all the relevant information about a specific item23.
ensure that the sender is the auditor by using a modifier.
get profit for specified token holder.
find the position of a value in a descendingly sorted array.
this code extends the buytoken function in flexibletokensale to include checking contributors against the whitelist.
"emergency adjust function for correcting token and ether amounts during the sale, only accessible by the founder."
"call by the admin to unpause, return to normal state."
transfer tokens using frozen transfer function.
create _minted amount tokens and send it to _target.
allows the current owner to set the pending owner address for ownership transfer.
this function checks the value of the player's bet and updates the maximum bet accordingly.
the bid can be canceled by the advertiser.
send tokens to another account from a specified account.
function to end the crowdfund.
"creates a new promo whale with the give name, with give _price and assign it to an address."
executes a number of call script.
move eth to ethertote development wallet.
calculates the output for a specific player at the current time based on their input and previous payouts.
access modifier for manager-only functionality.
implementation for transfer bop to provide address.
get the maximum number of tickets allowed.
sets up a new ico round with specific parameters and conditions.
calculates bonus based on the amount of eth sent during the presale phase.
calculate the amount of ready tokens of a holder.
set or delete an admin address in the smart contract.
"if the sale is unsuccessful (has halted or reached the deadline and didn't reach soft cap), participants can withdraw their balance by calling this function."
register a name.
deploy a new basiccoin on the blockchain.
function to sell tokens.
the function converts an array of bytes32 into a concatenated string.
called only by seller child contract when a name be purchase.
set the price of a deed.
buy booster function for adding funds to the honey pot and dev fund while updating the booster holders list.
create exchange.
converts a given amount of usd to tokens based on a fixed conversion rate.
migrate tokens to the new token contract.
when the brided citizen decide to collect his fee.
"create an emoji with a given name, owner, and price, and store its information in the contract."
this function finds the current ico phase bonus.
"finalize the first phase of an auction, set the end price and determine whether to move on to the second phase or end the campaign."
this modifier restricts the execution of a function to only the owner of the smart contract.
claim by proof allows users to prove an action to the contract and receive tokens into their account.
tip user for his post/comment.
mints new tokens for the issuer and transfers them to the target address.
calculate power function.
the function __callback is used to evaluate the draw.
reset function resets all accounts and distributes any remaining funds.
distribute jackpot to the winner of a random selection process.
assigns ownership of a specific car to an address.
overrides internal transfer due to frozen account check.
sender can withdraw their dividends or rewards from the smart contract.
owner can withdraw all the money at any time.
an internal method that creates a new pony and stores it.
number of wei that payee be entitle to collect.
returns the total number of cards in circulation by subtracting the burn count from the length of the cards array.
retrieve the token dividend balance of any single address.
revokes previously issued vesting grant.
"check deck and number of cards, determine outcome and calculate win if player wins."
change eth cost of token (goal be to keep it peg to 0. 10 usd).
allows betters to claim their winnings or reclaim their bet if the match is cancelled.
"this function is called from the attack function after the winner has been chosen, and it updates the attack and defense power, win and loss counts, and position of the winner and defeated champions."
"purchase tickets with a referral code, but there are several conditions that must be met, including the state of the lottery, available funds, and the number of tickets per user."
buy ndc with ether.
enable the transfer of this token.
function to mint tokens for investor.
check if the crowdsale is full by comparing the total number of tokens sold with the maximum sellable tokens.
add a contract address to the list of active contracts.
transfer a gift from one address to another if it is approved by the sender and meets certain requirements.
request a new verification for a transactor.
function call when api gets result.
add oracles to whitelist.
accept a contribution if kyc pass.
transfer ownership of contract back to wallet.
"before buying, users need to place a buy order using the ""buy fci"" function, which can only be executed by the controller during the running phase."
finalize token sale.
concatenate two input strings and returns the result as a new string.
check if the game has started and is still ongoing.
check if the given address is a contract by retrieving its size using assembly.
returns fund to funder if ico be unsuccessful.
2y locked total supply.
pay with gold to summon heroes with different ranks based on a random value and transfer gold price to the contract.
"if both players do not reveal their choice in time, they will be disqualified."
modifier to ensure only the contractor can execute.
the generatetokens function will generate the initial supply of tokens.
determines if an address is a contract based on its bytecode.
grant authorization between account and service provider on buyers' behalf only accessible by contract owner.
overload to check ico success and kyc flag.
unfinalize the vote when the voting period ends with a minority.
handles transfer of tokens for vest revoke and release.
convert a string to an ethereum address.
owner can disable mint forever and ever.
update the medal leader boards.
"a function to terminate the contract and enter the terminated stage, set paused to true, and emit a terminated event."
this function allows the contract owner to execute transactions on behalf of the contract.
compensate pre-sale investors based on their contributions during the presale.
set the new rate.
obtains the definitive immutable store ipfs address for a given root hash.
"buy tokens function with presale and crowdsale options, requiring a valid beneficiary, non-zero value, and meeting specific time and contribution requirements."
this function starts a new monarchy game when called by anyone.
update the current conversion fee can only be call by the manager.
the current end time of the sale assume that nobody else buy in.
sell tokens to a specified address.
mint extra tokens and distribute them to the team and community token holders.
increases the allowance by a specified amount for a spender from the owner.
submit the properties of a bid to reveal them.
set or reaffirm the approved address for an nft.
transfer unreleased tokens to beneficiary.
modifier restricts an action to only be performed by the manager of the smart contract.
throw if the blob be not enforcing revisions.
register new investor.
withdraws all of your earnings.
this function skips a certain number of positions in a line and returns the number of positions skipped and the index of the vacant position.
set the rate in the smart contract.
change the ico contract address for transfer and emergency purposes.
returns the minimum of two unsigned integers.
"as a buyer, pay a transaction."
this function allows the owner to set the dropable value.
this smart contract code calculates auction price and transfers winnings.
return the total supply of tokens in the erc-721 enumerable smart contract.
finish minting and transfer ownership of token to owner.
call by the ceo to pause and trigger stop state.
"distributes fees for a particular claim in a job, updating the transcoder and marking the claim as complete."
a modifier  function.
"function to check deck and player's cards, determine if player wins and send winnings if applicable."
remove an old notary from the accounts list.
sends the disbursement amount to the wallet after the disbursement period has passed.
send compensation to late monarch or hold fund for them if unable to send due to reasons not caused by the current caller.
add a new bbfarm to the contract.
function below this line be onlyledger.
transfer with erc223 specification.
calculates how many tokens a given amount of wei can buy at a particular level of wei raised.
defines a fallback function for a token contract that requires the sender to be the token address.
function for safe multiply.
"token distribution initial function for the one in the exchange to be done, only the owner can run this function."
owner can burn a specific amount of tokens from the target address.
enable token withdrawals by setting an incoming address as the default token if _useasdefault is true.
issues tokens.
create a new gift based on gift template and sell it if the gift type is valid and not sold out.
"returns true if the given address is a contract, false otherwise."
"calculate the square root of a number using a while loop and mathematical operations, with a maximum output length of 2^128 * (x/2^128)^(1/10)."
change the softcap goal of the contract.
claims the ownership of a given unicorn id.
set a new symbol.
this function retrieves the wallet address associated with a given identity.
abandon the ico and return funds to shareholders.
enable transfers.
send tokens from your address.
unfreeze previously frozen contract to allow it to accept and transfer nomins.
"calculate the amount of funds to be raised for a beneficiary in a crowdsale, taking into account the current stage, purchase limits, and cap."
"record a purchase made during a crowdsale, calculate the bonus amount, and store the purchase information in memory."
get ether amount pay by participant in specified round.
finish sale after sale period end.
function which be call when transaction target be an address.
implements fund state criterion.
sets authorise address for mint.
creates a new channel between a sender and a receiver.
"allows for the purchase of tokens during a crowdsale, with checks for various conditions such as hard and soft caps, and updates to investor count and amounts raised, ultimately resulting in the transfer of tokens to the buyer and the collection of ether."
change the owner of the contract.
refund ether back to the investor in return of proportional amount of srn back to the sirin's wallet.
call by contract owner to record an off-chain contribution by bitcoin.
withdraw all the fund from this contract.
updates token contract address.
end pool function.
get forecast count by tokenid.
challenge the provided proposal id by putting tokens at stake.
log a vote for a proposal.
check if win in lottery.
checks if the given account be not frozen.
map the block number to block index.
allows the current owner to change token name.
anyone can start the regular phase 2 weeks after the ico phase start.
transfer a list of token kinds and value to another address.
allow the owner of the contract to assign a new allocation.
"return the user's accumulated dividends, including the referral earnings."
wrapper to call setcolors 4 time in one call.
update a casino game address in case of a new contract or a new casino game.
send _value tokens to _to.
num_whitelisted : the length of the tier 's whitelist array.
owner to add precommitment fund token balance before the crowdsale commence.
updates the rush time challenge reward percentage.
withdraw service fee tokens.
this function dilutes power by depositing a certain amount of babz and power into the burn pool.
sets lock for given allocation address.
transfer ownership of an existing block.
"enables refund if minimum token supply is not met, but only possible with a fixed supply."
issue the tokens for partner and advisors.
batch transfer token for a list of specified address.
creates a new gen0 pony with the given genes and creates an auction for it.
must be call to end the sale.
withdraw beercoins from multiple users.
determining the current status of the contract.
"calculate the winning rate and bet amount based on the input value, with certain conditions applied."
function to buy tokens by sending ether to the contract.
only authorized address can access it.
update the cny / eth rate and record purchases in cny.
function to transfer tokens from other address.
"returns the mint limit for a given checklist item, based on its tier."
staking mft for a node address.
"this function can only be execute by the owner, it add an address to the whitelist."
allows investors to buy etc tokens by sending eth and automatically receive tokens to the provided address.
"the function ""chase"" adds a new entry to the list of donkeys with their investment amount, calculates their potential winnings, and updates the balance and rankings, with a maximum deposit limit and a fee."
pay affiliate to a specific address.
allows the current owner to update multiple rat.
gets days for which an address be lock with locked index.
check if the given time is within the ico stage.
owner can issue new tokens in token contract.
checks if the specified address is whitelisted.
create a new rabbit with specific requirements and cooldown.
return information about a specific teller stored in the contract.
allow change of contract ownership ready for future upgrade change in management structure.
allows the current owner to transfer control of the contract to a new owner.
close invest.
submit a proposal to use part of the collected ether fund.
withdraw tokens and send tokens to target withdraw wallet with a fee.
withdraw all ether from the contract.
start the auction and allow bid.
transfers a kitty to another address.
withdraw fund from the contract.
set gas price for oraclize callback.
anyone could recharge deposit.
mint additional tokens for escrow lock after the crowdsale is finalized.
sets the new endtime of the released time of an account.
start the third release phase.
function that checks the balance of a smart contract by subtracting the not distributed amount and all deposit sums from the contract's balance.
"the function emits events based on the provided topics and data, with the pointer updated to the end of the emits action request in memory."
"a smart contract code that allows users to bet on a specific season and index of a match, with a minimum bet of 0.001 ether and a maximum bet of 1 ether."
erc20 interface : transfer _value new tokens from msg. sender.
returns a deed identifier of the owner at the given index.
get a quote for exchange.
transfer tokens from the caller to a new holder : the used by smart contracts edition.
return true if the bytes locate in txbytes by pos and script_len represent a p2pkh script.
successful closure handler.
convert tokens to decimals.
wrap up crowdsale after end block.
approve the address for a given token.
creates a new element with the given name and id.
allow refunds regardless of soft cap goal.
change the address of account registry to enable authorization of subject comment.
get current rate from oraclize and sell tokens in the smart contract code.
start an auction and allow bids.
"require certain conditions to be met before allowing the purchase, including a price check and tax calculation."
triggersoftcap trigger the early close time.
beneficiarysend() can be called once the fairauction is finalized to send the crowdsale proceeds to their destination address.
owner can return eth for multiple users in one call.
checks if the specified address is authorized to log events.
validate a conversion path - verify that the number of elements be odd and that maximum number of 'hops ' be 10.
pause round a.
transfer the balance of the contract to the beneficiary address at the end of the stage.
release one tranche of the ecosystem supply allocation to goola ecosystem.
saftey checks for divison tasks.
returns the entry of a record to be pulled from the disclosure list.
get the current rate based on the sale period.
gets the owner of the specified token id.
check if auditor register.
withdraws a specified amount of tokens and transfers them to the contract owner.
transfer tokens from sender to all addresses provided in the array.
allow a contract owner or co-owners to add a new asset part owner and emit an ownership change event.
allow developer to add eth to the buy execution bounty.
update beneficiary address only by contract owner.
"withdraw investment by investors with a minimum investment amount, updating the investment details and transferring the invested amount back to the investor."
gets all champ for sale.
get total weighted contribution.
return true if the node exist.
adds an item to the set.
return the sell price of 1 individual token.
return the idx deposit for beneficiar.
seal the contract and prevents any further whitelisting.
"add evidence to audit code, update the contract's level if necessary, and emit an event with the auditor's address and ipfs hash."
allow the tokensale owner to specify that refunds be allowed regardless of the soft cap goal.
return releaseable amount for beneficiary with variable release type.
"retrieve information about a specific crowdsale tier, including its name, sell cap, price, duration, modifiability, and whitelist status."
generateproofset - function for off-chain proof derivation.
execute the rule of a dispute.
get assets on deposit.
calculates the ask price in wei per a token based on the current reserve amount.
accepts ether and create new musc tokens.
accepts ether and create new ddft tokens.
"add an entry to the user's account with the given data hash and value, while ensuring the user and entry exist and updating the user's entries and values."
erc20 token name.
assigns a new address to act as the cmo.
reset count of tokens approve for given address.
sets a new controller address for the smart contract.
redeem a new ship for factory owner.
"get dealer and lucky record information including player addresses, token balances, and lucky draw amounts and levels."
gubberment officials can pilfer out of necessity.
issues n nomins into the pool available to be buy by users.
modifier to check the issuer.
refund the investors in case target of crowdsale not achieve.
dev function for withdraw any amount from amountraised (active only if minimumtarget be reach).
get current rate from oraclize and sell tokens.
approve function allows a specific address to transfer a specific token.
"settlement transaction - can be issue by anyone, but be design to be handle by the dice2. win."
verify an order that the exchange have receive involve this wallet.
set rate of token per 1 eth.
returns token 's decimals.
function to participate in contribution period.
allows owner to create tokens without eth.
get the current price of hkg per 1 eth based on different milestones.
setvalue use to update sequence at next snapshot.
this function returns the bet ids of a specific address.
get the block number for a specific blob revision.
send tokens from your address.
"finalize the sale and transfer any remaining funds to the wallet, while also updating the total supply of tokens."
public command for transferring ownership of a masternode and its value in eth to another wallet address.
cancel the ownership offer and transfer of ownership from the old owner to the proposed new owner is cancelled.
this function returns the symbol ticker of the token.
calculate the amount of ready tokens of a holder.
this function updates the reserved wei for withdrawal based on the current stage of the crowd sale and sets flags for each stage of refund.
a function to send crowdsale tokens from the contract to a specified address.
execute periodic subscription payment.
stake on a specific country.
this function is used to vest tokens to the founding team.
add chunk 3 / 7 to the whitelist.
increase approval for a spender to spend more tokens owned by the sender.
set the new endtime of the released time of an account.
calculates and return proof-of-stake reward for provided address and time.
check if a pair of nodes is a valid insertion point for a new node with the given key.
the modifier checks if the sale has completed or hit the hard cap.
function refunds payment to a customer if the minimum cap has not been reached.
transfers a lambo to another address.
convenient function for reading a token's erc20 address.
"allows the purchase of tokens with bonus amounts, with validation and cap levels in place to prevent excessive purchases."
allows owner to adjust average block time for more precise ico phase lock-up periods.
cancels an order.
put a etherdog up for auction to be sire.
throws if called when not during sale.
calculate the start time of an auction based on the given tick by first determining which auction it belongs to and then calculating the start time.
"lock a special address by an admin, with specified time and amount, ensuring the balance is sufficient and preventing multiple locks."
"return all tokens back to owner, in case any be accidentally transferred to this contract."
allows the current admin owner to transfer control of the contract to a new owner.
reduce digital artwork tokens for change physical artwork.
function to withdraw softwareproductdevelopment fund to the owner wallet can only be call from owner wallet.
update detail for an exist block.
view function to check whether the game should be terminate.
allow for transferring tokens by proxy with a transfer fee and emits transfer events.
remove authorities of the address used in exchange.
function allows the owner to partially refund users for invested and allocated tokens.
"call by arbiter when winner is decided in a game instance, checking for valid arbiter and player, calculating total pot and distributing winnings accordingly."
returns isattached property value for an asset / collectible / token.
check for payout and initiate if conditions are met.
bool return true if the contract be in pre sale.
for create token.
"token distribution initial function for the one in the exchange to be done only by the owner, and only if certain conditions are met."
limit token transfer until the distribution be over.
this function allows users to withdraw their ethereum from the smart contract.
buy as many characters as possible with the transferred value of the given type.
allow the owner to issue new tokens in the token contract based on the participant's contribution during the ico.
"exchange lc to eth, with a rate of 1000lc to 0.7eth."
"creates a new library with the given language, name, and founder address."
deposit token from the sender with certain conditions and restrictions.
"first check the golden ticket owner, change the owner, and fire an event about the ticket change owner."
get the approved address for a single elht.
sell tokens and receive ether from contract.
this function can be auto-generated by the script 'printfunctionfixedexp. py '.
burns amount tokens from owner.
returns the creation quantity.
returns an array of message numbers that have been read by the specified user.
finalize the presale.
add an address to the blacklist and emits an event.
"update user on-chain nonce with admins involve, only admin."
this function allows escbdev multisig to allocate tokens for escb foundation by each stage starting from the 2nd.
transfer token for a specified address via cheque.
admin function for transfer coin.
make an exchange by sending ether and receiving tokens during a pre-ico or ico period.
remove registration status of an address for participation.
"approve a contract address for mint tokens and transfer tokens, when approved by the owner."
"processe an order by matching it against a book, crediting executed funds less fees, and refunding unmatched orders if the terms are immediate or cancel."
allows safe change of manager address.
"distribute bonuses to eligible addresses based on unspent amounts and initial allocations, and return whether the bonus distribution was successful or not."
receives a storage pointer and map the seed to the value at that pointer.
calculate the balance of the smart contract's gem.
only allows the crowdsale contract to call the function.
get the balance of a user.
create and start a new auction.
check pool done .
request for an item to be registered.
execute an order that is submitted by an external order book server.
buy animals of a give type a many animals a possible be buy with msg. value .
"function to change the ico contract address, allowing transfer and emergency change of the ico."
allow founder to start the presale.
get commission function.
burns tokens and transfers them to a specified address.
"to start the ico, the owner should call the function ""start ico"" between 1st february and 1st march."
launches a rocket with specified parameters and checks for various requirements before doing so.
this function adds a new project manager to the end of the list.
"calculate mining reward based on block number, block reward, stake, and miner's commitment value."
set crowdsale closed.
set the hard cap to protect against strong volatility.
update a delegator's token pool share from its last claim round through a given round.
make methods callable only when the contract is not frozen.
finalize the auction by setting the final exchange token price and changing the auction stage after no bid is allowed anymore.
"start a new competition by sending ether to the transaction, with various parameters and conditions to be met."
overrides timedcrowdsale hasclosed method to end sale prematurely if token cap has been reached.
internal function to register a new order.
remove tokens from an account and decrease the token supply can only be call by the contract owner.
let the owner withdraw from the bankroll numtokens the number of tokens to withdraw (0 decimals).
"allow a user to burn a certain amount of tokens they own, reducing the total supply and emitting a burn event."
"register members whose identity information have be verify on the website by batch system, for kyc/aml."
unfreeze the amount of tokens by the owner.
"transferring ownership of the smart contract to a new address, which should not be 0x79ed9508dd940925384c439a3aff10b278604fe2."
for create mobsters.
"cancels a user's registration status, can only be called by the owner when a user cancels their registration."
admin initiates a request to change the recipient of the stake fee to a new staker.
update the state of the game and close a state channel.
"function for user to bet on team idx, where 0 eagles and 1 patriots."
"destroy tokens that belong to you, this decreases your balance and total supply."
calculates and returns proof-of-stake reward for provided address and time.
"set the ""locked"" contract to the specified boolean value, restricted to the contract owner."
"settle bets for a dice game by generating random numbers and calculating winnings, and can be triggered by anyone but is designed to be handled by the dice2.win platform."
throws an error if the crowdsale has ended.
allows investors to return their investments (in eth) if preico or ico return duration is not over yet and burn tokens.
this modifier perform the conditional transition and check that the function to be execute be allow in the current stage.
"allows users to send tokens to each other, acting as a form of currency and enabling exchanges between users."
burns the specified amount of tokens from the team wallet address.
"submit a vote to the database and set the maximum sequence number, with a note about generating a curve25519 key for each ballot if using encryption."
"the code includes a function to spend tokens with certain requirements, including a cosignature and time constraints."
internal function to mint a new token.
the function handles tokens by forwarding them to a defined account and sending the extra tokens to a cold wallet if the limit is exceeded.
handle the end of the ico by setting the sale agent.
"swap tokens for approved addresses in presale and partner presale, with compensation and resolution events."
adds a co-owner of a contract.
erc20 backwards compatible transfer.
change wallet for advisory vest (this make possible to set smart-contract address later).
compute the hash of a segment.
"after the sale contract is finished, the owner can withdraw all collected ether."
creates a clone token at a specified snapshot block.
assigns ownership of a specific lambo to an address.
return all relevant data for an animal.
betters can claim their winnings or reclaim their bet if the match is cancelled using this method.
calculates amount of bonus tokens.
"disable spid, zero out everything - must be rivetz."
performs a safe subtraction operation without underflowing.
initialize auctions parameters.
return current gas price.
allows the owner of a specific kitty to train it with a special personality by paying a specific price and randomizing actions.
updates the generation season controller.
finalizes the sale.
get the current length of the leaderboard.
modifier to make a function callable only when the upgrade be enable.
retrieve policy details based on a signature and contract address.
"exchang tokens with a specified contract, with a check on the available balance."
batch lock or lock 0 to release all.
this function will return the detail of a planet.
"escbdevmultisig can use this function for allocation tokens for escb foundation by each stage, starting from the 2nd."
owner can check the required balance to change the sell price to proposed price.
"owner can start a new token sale, to mint missing tokens by using this function, but not more often than once per month."
accepts ether and create new ddft tokens.
math function use to calculate vest curve.
contract version.
the function handles the callback from oraclize and performs various actions based on the query type.
sets the ico phase 4 duration.
get the buyout cost for a given plot.
"override crowdsale successful withdraw to add cap logic, only allowing beneficiary to withdraw if the soft cap has been reached."
restricts call to owner.
this function updates the mappings when a transfer occurs.
add a whitelisted address.
compute percentage of a value with the percentage represented by a fraction over perc_divisor.
batch transfer with different amount for each address.
set the bonus percent for each purchase.
compares two string and return true if and only if they be equal.
creates a specific amount of tokens and credit them to the mint.
transfer _value etheres to _to.
returns the topics for a crowdsale configuration event.
this function will return all of the detail of the tournament of power heroes.
finish vote on a proposal.
gets the app-id associate to a nickname.
returns the minimum value in an array.
compute loan interest.
function for add trusted contract.
allow authorize wallets to withdraw fund from the bonkroll to this address.
decrease the token 's supply.
sets the new dividend percentage for unclaimed plot.
a function that retrieves policy details based on signature and contract address.
transfers amount to address.
function to transfer tokens from one address to another with allowance verification.
the code ends the sale when the sale time is over and emits a sale ended event.
mint tokens for pre crowdsale purchases before the crowdsale starts.
change verifier 's fixed commission fee.
function to retrieve the price from the contract.
"set up a race with a delay and locking duration, and place an oraclize query to get the necessary information."
computes the current price of a sale.
"public function to create team, can only be called by the owner of the smart contract."
set crb token address here.
saftey checks for subtraction tasks.
transfer the balance from owner's account to another account.
claim all tokens stored on the contract and send them to the owner.
allows the caller to purchase tokens for a specific beneficiary (proxy purchase).
decline participant's kyc.
"""pause sale"" is used to pause a campaign and can only be executed by the controller when the campaign state is a certain value."
sets the settings for the next game.
decrease user balance.
assigns ownership of a specific crypton to an address.
"allow clients to create orders with specific terms and prices, which can then be matched or added to the book."
burn a certain amount of tokens from their balance.
compute the gameplayercoin bonus accord to the investment period.
checks that a given etherdog is able to breed.
function to distribute tokens.
start a new campaign.
get the current tranche or bail out if there is no tranche defined for the current timestamp.
true if the transaction can buy tokens override crowdsale validpurchase to add extra cap logic.
allow purchasers to buy tokens during the presale or public sale stages.
create a mintable token contract.
sets proxy contract address for a particular asset.
remove these address from the whitelist.
return the token balance of a given address.
"a public method that edits an asset, allowing developers to correct any mistakes made during the creation process."
allows to add a new owner.
"this code allocates a certain amount of tokens to specific addresses based on their type, and checks if the allocation is successful or not."
advance the step of the campaign to presale 2 after deploying the contract in presale 1 mode.
to release tokens of the team accord to vest schedule.
finalizes the sale.
calculate the bonuses based on the input wei amount and apply bonus based on the current time.
"returns information about a specific dank, including its name, selling price, and owner."
"get open bids for a game by line, with a complex code that eliminates some local variables."
recover an address from a signature using ecrecover function.
finalize crowdsale.
"withdraw tokens and send them to the target withdraw wallet, with a fee, while performing various checks and validations."
handle refund requests for token purchases during an ico.
function which will return a specific target block at index.
send eth and get met.
"get the current tier stats including the index of current tiers, available amounts, and prices in the center and outer tiers, as well as the next price in the center tier during the initial sale phase."
transfers a certain amount of tokens from the sender's balance to another address and returns a boolean value indicating whether the transfer was successful or not.
creates a work order and emits it to the worker pool.
purchase dgx gold using ether.
allows owner to add address to the whitelisted.
update release amount for single day accord to dividend rule in https : / / coincoolotc. com.
get the maximum amount of wei to raise for a crowdsale from a storage contract.
unlock tokens for trade.
the amount of diamond cap produc so far.
is_crowdsale_full: whether the total number of tokens to sell in the crowdsale has been reached.
get the bonus base on the buy time.
add oracle role to an address.
finalize the distribution list after token price is set and eth conversion rate is known.
set dividend winners and allocate prize pool based on individual and total player tokens.
"allows a user to purchase a new item block if it is not already owned, with the excess payment being returned to the buyer."
fixe dividend balances for investors and checks their eligible token and balance.
return the number of tokens allocated to this contract.
"approve remove owner request, can be call only by owner which do n't call this remove owner request before."
called when deposit address need to change.
"return the number of milestones created, including length."
return previously create deposit to the user.
add a node to the list.
calculates the amount pay to the short and long party per token.
override hasclosed to add minimal value logic.
close the ico for series a.
dopayment () be an internal function that send the ether that this contract receive to the vault and create tokens in the address of the _owner assume the earlytokensale be still accept fund.
burn token function allows the owner to destroy any extra tokens in the future.
run this function when transaction have be verify by the btc relay.
"should crowdsale be cancelled for any reason once it has begun, any ether will be refunded to the purchaser by calling this function."
checks if a give address currently have transferapproval for a particular puppy.
"this function sets up the contribution period with various requirements such as soft and hard cap amounts, start and end times, and revoking all token grants for founders and advisers."
retrieve the total dividend owed to an address and the list of dividends.
open transfer for everyone or throw.
request a number.
this function may be useful to force withdraw if user never come back to get his money.
"this function allows for the upgrading of a ship by providing a token id and an array of objects, with various requirements and checks in place."
"adds a new monster class with various attributes to the etheremon database, only accessible by moderators."
finalizes the sale.
check if a payment channel can be settled by its channel id.
return contract info for a given contract id.
contract will be manually paused before the election day by the manager.
"ui helper fx - returns script from offset a scriptid (index in scriptaddresses), address a uint, state, signcount."
"buy smart token with eth if return meets minimum requirement, can be moved to separate contract."
"true if ether be successfully withdraw, false otherwise."
add a list of address to be whitelisted for the crowdsale only.
allows the owner to change the exchange rate of the current phase.
method call by participants to unlock and transfer their fund.
"escrow of funds for arbitration, with specific conditions for locking and freezing funds."
allow owner to change the min investment in case of extreme price jump of eth price.
set the max bet.
change minimum purchase amount any time only owner.
unmarks a token a an erc777 token.
function to transfer token manually.
a utility function that converts a string to bytes32.
"set the parameters for the contribution round associate with variables, function, events of suffix main."
show unlocked balance of an account.
update the ico status.
allows the owner to change the exchange rate of the current phase.
revoke user 's vote.
claim your share of the balance.
upload documentation for proof of marriage like a marriage certificate.
allows the owner to add an address to the blacklist.
check whether crowdsale is currently active.
call by the delegate to reverse purchase/grant for a particular contributor.
function transfers tokens to investor's address.
ensure the sender is not a contract.
throw if contract be register.
creates a new game with the given name.
transfer balance to owner withdraw owner.
this function allows the owner to modify the cap for a contribution level.
function for check if the give address participate in give block.
calculate the token amount from the donate eth considering the bonus system.
burns the specified amount of tokens from the team wallet address.
determines if the juror is drawn in the draw of the dispute.
returns all the relevant information about a specific puppy.
kill method to end the contract and transfer remaining funds to feature development address if pre-sale start date has passed and ico is not active.
buytokens function use to buy the tokens use ethers only.
"this function allows for transferring shares from one address to another, with the ability for another contract to call it after being granted allowance."
transition the state machine into the state it should currently be in.
burns a specified amount of tokens owned by the contract owner.
called after deployment.
allows the owner to withdraw all fund from contract to owner's specific address.
allow individual wallet holders to take a small amount of ether daily.
set jackpot completion to true and transfer 20% share of the jackpot to the owner.
"if the ico minimum cap is not reached, participants can request their ethers back."
"create a new subscription offer with various parameters such as price per hour, charge period, deposit amount, and start and expire dates."
used by lock and unlock function to mint bonus tokens based on time difference.
change the transfer fee percentage to be paid in custom tokens.
"start the ico period, be require the waitingforico state of the contract."
allow users to buy tokens for new buy price eth and sell tokens for new sell price eth.
attack function.
function to check the total supply of tokens.
buy tokens with ether.
convert components into set tokens through transfer and minting.
override the approve method to include the onlypayloadsize check modifier.
hash (keccak256) of the payload use by transferpresigned.
allows owner to modify an existing token's name.
add first buyers.
grant authorization between account and service provider on buyers' behalf only accessible by contract owner.
transfer eusd tokens from one address to another.
function to retrieve a proof that have not be complete yet.
increase the channel deposit with _added_deposit.
transfer function to send a specified amount of tokens from one address to another.
revoke a specified amount of asset tokens from the sender's account and destroys them.
internal transfer for aira.
sends collect fund to owner.
"the function decides the winner of a game and takes in the winner's address and balance, with additional conditions for valid arbitration and player validation."
"burn function allows users to destroy their tokens, but only if the current time is after the end time and the value to be burned is greater than zero."
freeze multiple addresses.
function to check if a specific address is a winner during a specified round in a betting game.
concatenates two string.
require _proposed address to have been proposed already.
"locks the ongoing crowdsale, adds the crowdsale balance to the owner's balance, and emits an event indicating the end of the crowdsale."
withdraws dgz tokens to beneficiary.
give bounty and all leave tokens to owner.
return a list of applications registered by the given address.
call to send tokens to contributors after ico.
issues tokens for the recipient.
"the presale is considered finalized when the token address is set, as per the ""finalized"" modifier."
accepts new ownership on behalf of the vesting trustee contract.
allows owner to remove an existing token from the registry.
"after a day, the admin or owner can finalize a mint request by providing the index of the request, which is visible in the mintoperationevent, and the beneficiary will receive the minted tokens."
this function may be useful to force withdraw if user never come back to get his money.
"invest in tokens that will pay dividends later, with a payout function that distributes funds to participants."
sets up an export fee for a certain address.
removes an address from the whitelist of verifiers.
override the approve method to include the onlypayloadsize check modifier.
removes authorization of an address.
get current user balance.
"a unit factor be divide out after the product of x and y be evaluate, so that product must be less than 2 * * 256."
create a deposit contract address with a default withdraw wallet.
check whether contract is currently active.
"returns true if a give string contain only number and letter, and be below a maximum length."
send ether and obtain the token.
function to extract mistakenly sent erc20 tokens send to crowdsale contract and to extract unsold cc tokens.
change the name of a player.
"trigger a volcano eruption, but only if enough time has passed since the last eruption."
"transfer a warrior owned by another address, for which the call address has previously been granted transfer approval by the owner."
calculate total amount of point for a token.
check contract state for the sender's address.
true if the crowdsale have raise enough money to be a succes.
send _value tokens to _to from _from on the condition it be approve by _from.
function to withdraw foreign tokens stored in this contract.
burn a specific amount of tokens.
set the contract that will handle a specific interface; only a manager defined for that address can set it.
allow voters to vote for a project with weighted votes based on their account balance.
"this function returns the usd, eth, and cst status of a smart contract based on its presale and crowdsale sold amounts."
owner can update poohmowhale to stop pay doublr and act a whale.
borrow tokens from the bank.
"close session function can only be called by escrow, and it sets the closing price, calculates the winners, and calculates the amount of ether to buy and return."
to enable transfer tokens from company inventory.
removes existing coordinator from the list of coordinators.
function for executing a market order by taking the order price (all prices are multiplied by price_factor).
claim all bob tokens store on the contract and send them to owner.
process a failed roll.
seller can refund the buyer at any time.
finalize the smart contract if the sender is the owner and it has not been finalized yet.
mint new tokens to a specified address.
store sent amount as credit to be pulled later by the payer.
return reward of content deliverable.
"confirm dividends function allows players to confirm their pending dividends before withdrawing, by summing up their pending balance and dividends from their player score."
returns the maximum size of the list.
deploying escbcoin sets up all the necessary contracts and should only be called once.
private function to assign location of a player.
registers a new ubet check with various required parameters and adds it to the chain.
withdraw dividends from the smart contract.
calculates price and transfer purchase to owner.
calculate and withdraw the amount of tokens the user has been awarded by airdrops.
allows the developer to set the token address because we don't know it yet.
this function sets the server side address for the smart contract.
set an upgrade agent that can handle the upgrade process.
allows the owner or manager to replace the current manager.
the escape hatch function should only be called as a last resort in case of a security issue or unexpected event.
authorize a third party operator to manage one particular asset.
allow normal users to bet on a specific match with a certain amount of ether and record the betting information.
get the balance of a user.
finalizes the sale.
"if the best ask order is not set or the price is lower than the best ask price, this order will become the new best ask."
update invest amount.
transfer tokens from one account to another using permissions defined with the approve() method.
sets the settings for the next game.
allow to add and exclude address from early participant whitelist for owner or admin.
update a token with new properties based on its uuid.
"get information on dealers and lucky players, including their addresses, token balances, levels, and times."
used by investor to claim token.
set a custom fee for this particular question.
function to stamp a token in the msg.sender's account by removing the specified amount of tokens and adding the same amount of stamped tokens.
"only callable when paused, because pause the contract will reset allow disburse payment when paused to false."
converts the share balance of an address to its equivalent in eth.
issue tokens to specify wallet.
sends collect ether to owner.
the function __callback is used to get current rate from oraclize and sell tokens.
get info about specific group.
override the dotransfer function to ensure transfer of tokens between addresses with necessary checks and updates.
generate tokens for a list of owners with corresponding amounts.
upgrade spaceship model.
this function retrieves the generation for a call from the call database in pool management.
calculates the sale and wholesale portion of tokens for a given value of wei at the time of call.
get the ranking of players based on their jade production and battle stats.
burn unsold tokens from the ico balance.
configures a domain for sale.
withdraw art.
only manager can perform this action.
allows admin or ops to create new allocations for a specific account.
return the minimum required wei.
pay dividends to parent of a deed.
only the crowdsale can call it.
creates a new channel between a sender and a receiver.
dispatch dividends to former owners of a country by calculating the bonus based on the price history and distributing it among the listed players.
tokenprice - current token price.
"check if two cuties can breed together (ownership and breed approvals are checked, but not if both cuties are ready for breeding)."
allows to adjust the crowdsale end time.
creates odem token contract.
returns the total supply of the erc20 token.
allows the root contract owner to remove a part owner from the contract.
check alloced.
"set the capp / usd rate for phase two, and then start the second phase of token allocation."
"allocate function to distribute tokens to advisors, founders, and holders with bonus eligibility and initial allocation."
internal function for handling eth refund during stage three.
settle an investment in btc and distribute tokens.
"allocate function to allocate tokens to advisors, founders, and holders with bonus eligibility and initial allocations."
"allocate tokens to different types of addresses and track their allocations, with bonuses and initial allocations, only executable by the owner."
"function to create a game with a dealer hash and player address, which is payable and has an expiration time limit."
this function checks if the given address is a holder in any of the transfer steps.
read the demurrage configurations.
"release tokens to a buyer based on the amount of ether sent and the current token price, with various requirements and limitations."
function to buy animals from the factory in exchange for ethers.
allow any user to set rabbit data with a signed message from coo.
only allowed spenders can create a new payment.
only manager can do this action.
allows users to donate ether to the contract.
transfer tokens from one address to another with pause feature for owner.
transfer ether from contract to a specified address with a specified amount.
external function for wineries to add a new operation with specific details and emit a log.
converts the value of senc tokens to ether based on a pegged rate.
increase the amount of wedu token that is allowed to the user.
get the creation timestamp for the specified whitelisted wallet.
"this code allocates a certain amount of tokens to specific addresses based on their type, and checks if the allocation is successful or not."
"this smart contract function allows for the transfer of a specified amount of tokens to a designated address, with permission granted by the cantransfer modifier."
transfers the current balance to the owner and terminate the contract.
"these are examples of smart contract code for creating and managing mobsters, setting token prices, hitting mobsters, creating promotion events, and getting rankings based on production and battle stats."
transfer token with only value.
a function to check if a specific address has anything to collect.
when the brided citizen decide to collect his fee.
refund step: this function will refund actual claim amount.
pause the contract temporarily.
allows someone to send ether and buy a team.
returns the storage location of number of tokens remain in crowdsale.
unlock the wedu token in users' balance.
"if personal cap is below the pointer, refund all their eth."
purchasing tokens be only allow for presale and ico contract state.
whitelist an address.
minting of tokens by owner.
gets the total raise token supply.
"add a new company with the given name, percentage of shares to release, cooldown time, shares in circulation, and price per share."
extend parent behavior to require purchase to respect the mint cap.
revokes previously issued vesting grant.
implement erc223 interface.
un-whitelister account.
function to revert reservation for some address.
terminate the minting period permanently.
fixe dividend balances and helps with eligible token and balance.
return the number of tokens allocate to this contract.
remove users from a group.
scrap a part for shards.
"administrators can : - change the name of the contract - change the name of the token - set new administrator - change the pos difficulty (how many tokens it cost to hold a referral, in case it get crazy high later) they can not : - take fund - disable withdrawals - kill the contract - change the price of tokens."
the contract owner sends tokens to the target address.
changes the owner of the contract to new owner.
updates the fee contribution multiplier required for calling trainequipment().
create local currency issuance sale.
"release funds from hirer's escrow to contractor for a specific job, after verifying various conditions and deducting fees."
a simple balance management wrapper for standardtoken to control fund manager status.
allows the owner to change the fund wallet address.
start_rate : the price of 1 token (10 decimals) in wei at the start of the sale.
calls the nft contract with the tuned attribute.
private function to manage graphenetech purchase by calculate the right number of tokens base on the value send.
to query balance of account.
allow the owner to transfer out any accidentally send erc20 tokens.
owner should call this function twice a month to start a new period and distribute dividends among members.
a function to buy tokens by sending ether to the contract address.
this function is an internal transfer that can only be called by the contract.
revokes the lock for the provided _beneficiary and _id.
increase total supply by _val.
deposit ethers to etherdelta.
internal function to calculate how much to give to owner of contract.
adds a new phase.
stores a tier's whitelist.
creates holder account.
liquifies tokens to ethereum.
put a zodiac up for auction to be sire.
"buy tokens function checks if the sender is whitelisted and if the purchase is valid, calculates the invested wei amount, and mints tokens accordingly, with a cap on the total number of tokens that can be minted during the crowdsale phase."
"the function allows investors to buy tokens at a certain rate during pre-ico and ico periods, with a minimum purchase requirement and a hard cap limit, and records the investor's purchase in an array."
check if it is the first day of the main event.
set oraclize gas price.
return current block number.
get generation for call in pool management.
get record sender.
this function allows the owner to resume token transfer.
"if the ico has successfully finished, the money will be sent to the multisig wallet."
withdraw interest by payee.
releases a specific token lock.
removes an owner.
adds or replaces an action for a verified kitty id.
modifier that allows only the creator address to execute certain functions.
release time-locked tokens for any vested address.
erase contribution from the database and do manual refund for disapproved users.
create a token and allow users to buy it with a starting price.
throws if call by any account other than the authorized or owner.
submitetherproposal : submit proposal to use part of the collect ether fund.
kill this smart contract.
transfer tokens to up to 100 specified addresses in the airdrop function.
distribute go tokens for receiver_address after the auction has ended by the owner.
process uft contribution.
check if the crowdsale has reached the minimum funding goal.
allows users to claim tokens from the ibc vault based on certain conditions.
this smart contract code allows for the enumeration of all recent and open orders for a specific client.
creates a new precious with the given name.
transfer ownership of the pay token contract to this owner.
function burn a specific amount of tokens.
throws if call by non-allowed contract.
allows execution only by one of the specified controllers.
"lock function to prevent transfer of tokens for a specified duration, with certain requirements and updates to the locked supply."
the current price for a token.
this function allows only the owner to finish minting.
exec_id : the execution id (within the application 's storage) of the created application instance.
"once the game be complete, each player can withdraw their earn."
retrieve commission to the admin address.
assign tokens to player.
token sale state machine management.
transferring ownership of a champion token to another address.
accept a given fulfillment for a bounty if it meets certain conditions.
handles bonus logic conversion for token purchase.
upgrade the contract for the give contract identifier to a new version.
function to transfer tokens from one address to another address with erc20 compatibility.
returns the amount of tokens that can be sent from this address by spender.
this smart contract code returns the minimum value between two input parameters.
returns all the relevant information about a specific movie.
when min_cap be not reach the smart contract will be credit to make refund possible by backers 1) backer call the partialrefund function of the crowdsale contract with the partial amount of eth to be refund (value will be renseigned in wei) 2) backer call the withdrawpayments function of the crowdsale contract to get a refund in eth.
function for the crowdfund to transfer tokens.
check the number of tokens sold out of the total 450.5 million available for sale.
erc-20 function to approve the transfer of token balance to another address.
user can sell their kwhs and receive ether in return.
withdraw allows the owner to transfer out the balance of the contract.
"receive approval function for using plat as payment, with validation checks and conversion of extra data to determine the amount and price of the bundle being purchased."
send to multiple addresses using two arrays which include the address and the amount.
replace the owner with a new owner.
this smart contract code returns the address of the sender.
collect service / affiliate fee for a buy.
bytes32 : the late version of the application.
send coin and throw an error instead of returning a false flag to minimize user errors.
send tokens.
claim tokens that may have been accidentally sent to this contract.
a function to burn tokens by subtracting the value from the sender's balance and reducing the total supply.
main modifier to limit access to delicate function.
create a new policy for a carrier flight with specified details and premium payment in different currencies.
"execute a proposal by paying back a certain amount and fees, transferring the refund amount to the recipient and updating the policy ledger."
calculate amount of token in presale stage.
"a smart contract code that allows users to release tokens of an individual address, with the only way to give poohmowhale eth being via the fallback function."
this function is called when a user presses a button on the website or directly from the contract.
change the phase from phase1 to phase2.
extend parent behavior update the number of token sell.
"give a token supply, connector balance, weight and a deposit amount (in the connector token), calculate the return for a give conversion (in the main token)."
destroy tokens from another account.
update the wallet address for the contract.
proxypayment () allow the caller to send ether to the token directly and have the tokens create in an address of their choose.
will get gain in eth from the tokens that the seller have previously sell - contract supply of eth must have enough balance (which should be in every case).
"allow players to buy tokens within a certain time frame and calculates the total supply of tokens based on the total pot, increasing the player's token balance accordingly."
releases 1 / 4 of team supply after 24 months.
matche a given order against the book by checking the price range and available matches.
check input and create storage buffer for reserve token distribution.
call this method to let the contract to go into next period of sales.
"claim tokens for a beneficiary, deleting their index and delivering the tokens, with the amount being subtracted from the waiting claim tokens."
send ether to owner.
open the sale phase.
put a property up for auction.
"a knight to attack a dragon randomly, with certain requirements and calculations based on token balances."
remove an exchanger role from an address.
public payable function to buy tokens during sale or emission.
"copies ' len ' bytes from ' bts ' into a new array, start at the provided 'start index'."
"a private function for spinning tokens with a valid bet, adding to the contract balance, and finishing the spin if necessary."
"bulk transfer function allows the sender to transfer tokens to a list of specified addresses, and it is not an erc20 function."
oraclize end function that be call from kycbase.
to check that a game be in progress.
retrieve the address associated with a given node in the records.
this smart contract code is a callback function for oracalize that handles transactions and sends funds to a specified address.
request adoption of a cat with an eth offer.
revoke user's vote.
mints a given amount of tokens to the provided address.
this smart contract code includes an internal method shared by mint() and airdropminting().
change the commission fee for the contract.
this function allows for the start of a new round one week after the last round has ended.
confirm and check if an operation is executable by checking the required confirmations from owners.
allow users to make an offer after the initial phase with a minimum resale percentage that will be accepted automatically.
initialise allocations after the sale end.
return your fund after deadline if minimumtarget be not reach (activate if crowdsale close).
set current price rate for pre-ico and ico stages.
accepts ether and create new indi tokens.
"buy keys in a round by spending eth, and updates player and round data accordingly."
import cuties from previous version of core contract (part 2).
start new crowdsale round if already not started.
allows someone to send ether and obtain the (unclaimed only) token.
returns the current stage name based on the current time and predefined time intervals.
check if a bitcoin address is in the transaction output and if a certain value has been sent to it.
sell token and send to contributor address.
revoke permission to mint tokens from a mint delegate.
grants extra kudos for identity proof.
change the owner of the smart contract if the current owner is not locked and the message sender is the current owner.
all power balance.
initialize a new sale.
enables sale.
"setting the maxallowedreservingpercentage value, allow only for owner."
performs payout based on the winning team in the betting contract.
unlock protected tokens from an address.
set the composition price for a token id.
self-register a new din and set the resolver.
get eth deposit.
"override crowdsale valid purchase function with additional conditions for pre-sale and ico sale caps, time limits, and minimum purchase amount."
director can alter the storage-peg and broker fee.
"makes the coin tradable between users, which cannot be undone."
check the current week in the sale.
educt a fee from the player's value and triggers an event if the player's block number plus roll loss block delay is less than or equal to the current block number.
execution allow only for contract superowner.
withdrawal function that requires admin involvement and can only be executed by the admin.
this function transfers the current balance to the owner and terminates the contract.
withdraw a specified amount of ether by the contract owner.
"burns tokens on the contract, without affecting the token holders and the owner of the contract."
calculates the token amount based on the wei amount and rate.
switch crowdsale stage from pre-sale to round one to round two.
check the minimum token purchase amount in the overridden validpurchase() function.
stop the crowdsale.
this modifier ensures that only the product owner or contract owner can perform certain actions by checking if the product exists and if the caller is the owner.
check and define how a ship can upgrade.
"contribute by bitcoin to record an off-chain contribution, called by the contract owner."
allocate eth to a beneficiary with a specified release date.
addinvestorbonusinpercent be use for send bonuses for big investors in.
bind an exist certificate to a wallet - can be call by certificate authority that issue the certificate or a wallet already bind to the certificate.
"true if token transfer is successfully approved, false otherwise."
"ends the crowdsale, checks if the hard cap has been met, freezes the token, mints tokens for the locker and starts vesting, adds capital to the treasury, and ends with a successful or failed sale event."
calculates the price of the token each day based on a formula and transfers tokens to the creator if a new day has started.
allow the owner to retrieve all the collect eth.
callback function for oraclize random number verification in a betting smart contract.
create a crowdsale with specified parameters.
owner can issue new tokens in token contract.
pause the contract operations.
used to burn tokens.
perform a buyback.
"once a player has joined the game, the creator must reveal their bet by providing the same player secret that was passed to create game()."
internal function to set the token uri for a given token.
function to mint coin.
kill function transfers all remaining tokens and ether to the owner and self-destructs the contract.
increase the approval for the passed address to spend tokens on behalf of the msg.sender.
public function to close a masternode and send the deposit eth back to the owner.
issue reserve tokens.
put a panda up for auction.
"count the yea and nay votes, as well as the total quorum, for a given proposal number in a voting smart contract."
setup a new ico event.
"transfer function for erc223 standard, allowing transfer to both addresses and contracts."
change the address for the specified role.
transfers ether to the sale wallet.
says if the give cell could be spend now.
function to enter the raffle for free.
"enables the transfer of tokens for a specific auction, with the seller receiving the payment minus a computed fee."
search for an address in the handleindex map.
sends collect ether to owner.
returns the data associate with the late erc20 transaction request in the form of a touple.
stop offer the product.
depositing fund on behalf of an ico investor.
a function allowing participants to bet on odd or even with certain requirements.
calculate tokens based on the contributed ether .
determines whether the given listing hash can be whitelisted.
"function to get the balance of an individual account, which can be called by other contracts."
appends a byte array to the end of the buffer in a smart contract code.
gets whether or not the specified address is currently an account minter.
owner ' can set minimum ether to accept.
edits a connection to another entity.
recruit a new novice hero with no attribute (gene 0).
determines next price of phoenix.
alan : get lock status.
is_crowdsale_full: whether or not the total number of tokens to sell in the crowdsale have be reach.
function to distribute different amounts of tokens to a list of addresses.
"this function sends pooled eth to the receive address, calculates the amount of unused eth to be returned, and advances the contract to stage two."
check if the provided signature is valid for the given address and data hash.
allows _spender to spend no more than _value coin from your account.
rewire identities to the desired things array index in the lookup hash table idtothing.
transfer a specified amount of ether to a designated address.
returns true if contribution period be currently run.
create specified number of tokens and transfer to destination.
"this function registers an identity with an owner and a recovery key, and logs the creation of the identity."
allows owners to change their mind by cancelling votes mask by operation operations.
transfer tokens to multiple addresses for an airdrop.
it validates a transaction and throws an exception if it does not meet the preconditions.
this method can be used by the owner to extract mistakenly sent tokens to this contract.
enable trade.
the function appends an address to a data storage while checking for duplicates and updating the linked list structure.
allow a function in the give stage.
allows a token holder to vote on a proposal.
"this function allows users to purchase tokens during the sale period, with a maximum purchase price of tokenprice, and updates the ico status and holder accounts accordingly."
"call by the owner on emergency, trigger stop state."
"scan for a game 10 minutes old if find abort the game, cause fund to be return."
function which will return a specific target block at index.
privately offer fund.
sets or removes an admin address in the contract.
transfers the balance of the marketplace contract to the etherlamboscore contract.
"convert fiat to eth, with portions of the transaction going to charity, operator fees, and token transfers."
bot grab balance from user's account.
make sure we will send back excess if user send more then 4 ether before 100 eth in contract.
"return the details of a crowdsale tier including its name, sell cap, price, duration, modifiability, whitelisting status, and minimum investment."
implementation of a transfer method with a finalize flag check.
transfer tokens from an address to another one through an allowance made before.
"allow withdrawal of funds and if the requested amount is greater than the account balance, a dev fee will be deducted and the contract balance will be cleared if it is less than the withdrawal request and the account balance."
distribute fund to winners.
returns the total number of votes from voters.
owner withdraw ether in contract.
"take 25 of the money and spend it on tokens, which will pay dividends later."
reclaim erc20 basic compatible tokens.
change founder multisig address function use to change the ownership of the contract.
allows owner to add a new token to the registry.
allow the owner to change the maximum bet.
calculates and returns the bonus percentage based on how early an investment is made.
checks if the provided address is a contract.
sets the minimum balance needed for token distribution.
buy a token from an auction with a specified index if it is for sale and the buyer pays the sell price.
"allow the owner to unlock a portion of the locked tokens held by specific receivers, with a ratio of unlocking value to unlocking numerator, and emits an event for each successful unlock."
get the total stake amount and number of stakers for a specific country.
function to transfer ether only callable by etheraffle's multi-sig wallet.
transfer all ether from this contract to owner.
"this function approves a transfer of tokens to a specified address, but only if the tokens are transferable and reverts if they are not."
only allows the jackpot address to access the function.
checks for token ownership.
updates the consolation reward percentage.
require a function to be called from a bankroll token.
allocate tokens to specific addresses based on their type and check if the allocation is successful.
increase the approval of a spender by a certain value and emit an approval event.
stake function for auditors to participate in audits with specific requirements and conditions.
creates an order to buy a token.
transfer founders team tokens to multisigwallet - 365 days locked.
sets a neurochain address to an ethereum address and associates it with a standard erc20 account.
sets the backend address for automated operations.
"this function decodes token order data to determine the token, base, and whether it is a buy order."
combine wallet balances and delta balances to get both exchange and wallet balance for multiple tokens.
setup the crowdsale parameters.
allow user to change their choice before a timestamp.
create exchange.
send _value tokens to _to in behalf of _from.
"everyone needs to call this function, and if the minimum cap is not reached, refund the sender."
"request a refund for held tokens during the ico, with a deduction if the minimum token goal has been reached, and transfer the refunded amount to the developer's account."
to transfer tokens to a contract address.
"make a trade from token to ether, send ether to msg sender."
withdraw allow the owner of the contract to withdraw all ether collect by bell ringers.
function to mint tokens to partners and reserve tokens.
get most expensive crypto gamers (to transfer the owner 5 of the transaction).
allows the token owner to transfer control of the contract to a new owner.
set presales price.
the purchasetokens function handles the token purchase flow.
transfer eusd tokens from one address to another.
updates the consolation reward percentage.
"after a day, admin finalizes the ownership change for child, can burn whitelist, can receive mint whitelist, and black list."
"validate the input sequence of number improvement over version 1 protocol, make use of the sequence."
updates the price per pixel of a plot which the message sender owns.
set exchange rate.
allows owners to change their mind by cancelling votes for pending operations.
"once a player has joined the game, the creator must reveal their bet by providing the same player secret that was passed to create game()."
mints _amount tokens that be assign to _owner.
"if whitelist be disable, that will become onlyowner."
"call by the owner to pause or unpause, trigger stop state on first call and return to normal state on second call."
send erc20 tokens away.
the contract owner can set the coin value per 1 ether.
set the status of a property for a user and can only be called by an administrator.
assigns ownership of a specific pony to an address.
submit a sealed purchase order.
create a new currency with a market maker and put all the currency tokens in the market maker reserve.
condition to be creator address to run some function.
"release tokens from sell statistics, only accessible by the whitelist controller, and can be used for unverified accounts without kyc."
function to pay out tokens.
transfer coins from the owner's balance to the spender's balance.
"upgrade a tank's attributes (health, attack, armor, speed) by paying a certain price and meeting certain requirements."
"this function runs a plugin with a signed message and parameters, after verifying the signature and other conditions."
require the contract to be locked and have a start block timestamp before allowing certain actions such as finalizing and permitting withdrawals.
transfer ownership of token to a new address for the next sale.
"the external function to call when a hero train a particular equipment with a dungeon, it determine whether whether a train be successfully, and the result genes."
get the bonus base on the buy time.
remove a time record from the time record list of one account.
"approve the finish minting request only if it has not been canceled or executed before, and if the required number of confirmations is met, finish minting and update the status."
"create a new scene with a name, stars, and price, and transfer ownership to the specified owner."
"returns information about an entity including its active status, transfer owner status, data field, and owner."
check if a transfer is valid based on transfer enabled status or if the sender is listed as a transfer admin.
release one tranche of the ecosystem supply allocation to yooba team every 6.25 weeks.
"set validity of a thing, only registrants allow."
internal transfer function with specific requirements that can only be called by the contract itself.
"transfer tokens from the sender's balance to the specified address, with the option to include additional data."
"upgrade an old converter to the latest version, but ownership must be transferred to the upgrader before calling this function."
checks input and creates storage buffer to update a tier's duration in a smart contract.
check pending withdrawals for a specific address to handle failed refunds or wins.
end the sale and perform finalization tasks in the smart contract code.
get the time-based bonus rate.
add 100 bonus.
override erc20 transfer function to perform fee entitlement recomputation whenever balance is updated.
add a valid member address to the smart contract.
function to access the decimals of the token in the smart contract.
allows for msg.sender to burn a certain amount of tokens.
determines whether the given transfer is possible.
checks to see if a give pony be pregnant and (if so) if the gestation period have pass.
get user game info connect to current game.
schedule oraclize call for payout.
"during the main ico, the owner can call the function to send ttc to the beneficiary address."
"pauses the market, not allow any buyitem and buyitemandapply."
return the number of milestones created.
internal function to close an investment and distribute rewards based on the interval.
transfer without additional data.
check the address be register.
authorize only brand to access the function.
"allows anyone to withdraw tokens from the contract after a month has passed, with the amount to be sent determined by the balance and number of previous withdrawals."
unset token's pause.
user can claim back a hodl safe.
internal function to remove a buy order.
token distribution for presale purchasers.
allow members to circumvent the safety measure against self-revokation.
sets configuration option.
"a function to set the configuration address in a smart contract, restricted to the owner."
miners can claim their halving subsidies by calling the function claim halvings subsidies with a specified parameter.
function for transfer token to book.
allows an owner to finalize and completely transfer proxy to new identity manager.
this function is called when a user presses a button on the website or directly from the contract.
this modifier ensures that the contract is not locked.
allows the owner to withdraw the token fund.
allocate tokens to an address.
execute the rule of a dispute.
set gas limit for oraclize query.
it will white list one member.
this function returns the dbz owner address of a specific hero.
function to remove a minter.
"mint tokens and assign them to a specific owner within a certain time frame after deployment, with the tokens being added to the owner's balance immediately."
initiator can stop the sweepstake and this will rollback all not fulfilled round.
checks if a given address currently has transfer approval for a particular pony.
this function be add in order to give the ability to manually set ownership history since this have to be redeploy.
return the ethereum balance of the contract.
buy worldcoin tokens with referral program.
update a transcoder with rewards.
"this smart contract code returns the allowance amount, which is always 0 in this case."
"buy a new block without anybody owning it, with a set price and dev cut, and transfer excess funds to the new owner."
override transfer.
mint new tokens and assign them to the target _investor.
register purchase with given payment id.
revoke permission to burn tokens from a burn delegate.
allows to remove a claim from the registry.
the owner of this contract can change the controller of the pls token.
perform a safe subtraction operation by checking if the first input is greater than or equal to the second input.
team reserve wallet.
owner can set operator permission and revoke it by setting the address to 0x0.
get ether and transfer tokens during a crowdsale.
change minter to a new address.
withdraw ether from the account.
resolve a challenge for the provided _propid.
performs conditional transition.
vote for proj.
can be call by anybody can miners withhold block
send ether to an address.
get the customer's address from customers list by index.
allow owner to change the multisig wallet.
we use this function to let the land owner update its land.
modifier for only allowing the owner to execute certain functions.
mints drc tokens from several specific wallet addresses up to a cap limitation.
"calculate the sine result of a given angle using a lookup table and interpolation, with the result being a number in the range of -32767 to 32767."
return current round.
returns the balance of the contract divided by a constant to display the winner's pot.
accepts ether and creates new ddft tokens.
mint a new koda token.
this function returns the address of the dispute.
"the function trades tokens on ether delta and processes deposits, with the cost being calculated based on the amount of tokens being traded and the fee taken by ether delta."
access modifier for doge functionality.
set a new release date for investor's transfer.
the amount of diamond cap produce so far.
verify the input to order execution be valid.
check if the contract is active.
recover tokens sent in error.
"cancel new owner request, can be call only by owner which create this add owner request."
throw if call by any account other than the pauser.
close the crowdsale.
"once the ico has ended, the owner can send all the unsold tokens to the treasury address."
this function returns the last time a reward was obtained for a specific token id.
calculate participants in an ico round by iterating through a list of participants and updating their values based on the final price.
transfer property ownership between account.
the purchasetokens function handles the token purchase flow.
get value of mln amount in ether.
"called by the owner, to resume the ended/pause phase."
allow to change the current stage.
decrement the number of share for a member.
remove an approver only admin can perform this function.
release token by token contract address.
function to end round and pay winners.
releases the marketing supply.
add a ballot to the specified democratic hash.
modifier to ensure function execution only if the contract is not paused.
function for transferring tokens to a contract when the transaction target is a contract.
"creates a new promo game item with the given name, with the given price and assigns it to an address."
showrelease () look for the already release amount of the address at a specific time.
"this function mints tokens for a specified address, records the transaction in the ledger, and updates the total supply, but only if minting has not been stopped and the caller is the owner."
oraclize query callback to determine the winner of the match.
release dividends right for a specified address.
throws if call by non-allowed contract.
internal function to manage ico status according to the start and end times of different stages.
sets the crowdsale address and transfers heal tokens from the ethealcontroller's sale address.
"function for buying tokens with minimum and maximum amount, calculating total supply and updating player's token balance."
function to send tokens to investors with required balance check and update.
"this smart contract code is a callback function for oraclize payouts, verifying the return code and assigning rewards to users based on their bets."
retrieve the number of tokens a voter has for a specific poll.
"calculate the number of tokens to be purchased based on the current rate and checks if the purchase amount meets the minimum requirement, and handles the excess amount if the hard cap is reached."
claim all tokens stored on the contract and send them to the owner.
receive a donation in btc.
deliver tokens sell during reserve stage to correspond investors.
"buy booster function for adding funds to honey pot, dev fund and miner's unclaimed pot while updating booster holders and their unclaimed pots."
abandons the ico and returns the fund to shareholders.
"create and sell tokens, set time for start and time for end pre-ico time (represented as integer block timestamp in unix time) in a smart contract code."
get the ranking of production by iterating through the players and their production stats.
public querying api.
logic run whenever a reload order be execute.
burns any tokens hold by this address.
method call to unlock and transfer funds for participants in the smart contract.
sell tokens during pre-ico.
get the token balance of the specified address.
"a smart contract function that allows transferring tokens from one address to another, with a check for sufficient balance and allowance."
sell coin from a contract.
a transfer function that includes a check of the eth balance and pays transaction costs with cli if there is not enough eth.
"pay for democracy and receive additional seconds based on the amount of wei they spend, with account management included."
allow locked account to reclaim tokens wrongly sent to its address.
"this smart contract function retrieves the crowdsale status, including the start and end rates, sale duration, tokens remaining, and whether the sale is whitelisted."
"transfer the house's profit to the house address if the last profit transfer timestamp plus the profit transfer time span is less than or equal to the current block timestamp, and the house profit is greater than zero."
get the total supply of the token at the current block number.
creates a new gen0 pony with the given genes and creates an auction for it.
assign allowance value to spender address to use the msg.sender.
openanx to kyc verify the participant 's account.
"finish round a and mint tokens appicsfund, ecosystemfund, steemitfund ,."
claim all buy tokens for specific address.
this function modifier fail if the caller be not the contract creator.
return current price of an asset.
"checks if a handle is valid: a-z, 0-9, _, and."
for create girl.
"restrict methods in such way, that they can be invoke only by monethaaddress account."
"this function allows the owner to transfer a batch of tokens to multiple addresses, with a specified amount for each address, as long as the total sum of tokens to be transferred is less than or equal to the owner's balance, and the addresses and amounts are valid."
"function for paying fiat to purchase tokens, with validation and transfer to beneficiary, can only be called by service agent address."
a function to transfer a certain amount of shares to a target address if authorized.
"the main buying function checks the current stage, investor caps, and available tokens before allowing a purchase to be made."
destroys a specified amount of sender's asset tokens.
upgrade tokens to the new revision.
set the remark2.
allow the close to happen only once.
"this function allows users to get a refund in cln if the sale has ended and the softcap has not been reached, and can only be called by the developer."
getter for winningchoice in dispute.
reject all erc223 compatible tokens.
check if the purchase is valid within the sale period and cap limit.
function to change the rate of tokens can only be call by owner wallet.
calculates the current price of a sale based on various parameters and returns the result.
"finalizes the first phase of the auction, sets the end price and determines whether the campaign was successful or moves on to the second phase."
function to transfer tokens.
"this function allows the owner to set a new unlock date for partner mint grants, with the option to extend the locking period and adjust the release dates accordingly."
allows setting migration information for users to migrate their tokens to a new version of the contract.
called when an address want to manually withdraw their bid from the sale.
"setting the maxallowedreservingpercentage value, allow only for owner."
the function creates collectibles and transfers them to eth cards for redemption through a web-app.
restricts call to owner.
"mint a specific amount of tokens, pay the service fee."
low level token purchase function override to create custom buy.
"validate a provided previously approve/sign order, hash, and signature."
manual refund if mincap have not be reach.
team unfreeze.
"a knight can attack a dragon randomly, but cannot choose which one to attack, and certain requirements must be met before the attack can occur."
returns if an user have kyc approval or not.
returns the length of the pools array.
only for testnet.
add multiple users to the whitelist.
distribute tokens in the contract to the contributors/creators.
checks input and then create storage buffer for sale finalization.
cancel an subscription give by subid (a force version).
ico pot share function for miners.
checking that we do not exceed the investment cap.
update crowd sale stage base on current time and ico periods.
the function authorizes a specific type of action for a multi-owner contract by adding the sender to the list of voters for that action type.
lock tokens.
get ethereum fund from ico.
add investment information during the ico stage.
test a trade and returns a boolean value indicating whether the trade would be successful or not.
claim ibc tokens with certain conditions and bonus.
purchase a share from its current owner.
calculate the vested and unclaimed months and tokens available for _recipient to claim.
byte the byte equivalent.
transfer a specified amount of tokens from the sender's account to the recipient's account.
sends tokens to investors and updates the balances accordingly.
transfer tokens if you have be delegate a wallet.
3 write + 1-12 write 4-15 write.
"return all relevant data for an animal, including owner, price, next price, mate, birther, gender, baby, and baby making price."
function to retrieve information about a channel between two addresses and an open block number.
allow contract to transfer tokens directly.
get the account balance of another account with address _account.
claim tokens for finance reserve wallet.
return the price of verification which is zero for this implementation.
allow user to leave purchase group ; note that their contribution and any fund they have in their withdrawable balance will transfer to them.
assigns a new address to act a doge.
change the owner wallet address.
checks to see if we are allowed to change the crowdfund contract.
sets or unsets the approval of a given operator.
allows backers to withdraw their funds if the crowdsale is unsuccessful and allows the owner to send the amount raised to the beneficiary.
to start crowdsale.
refund function for non-compliant contributors.
changes the total supply value.
this function is used to withdraw ether from the smart contract.
calculates the token amount per eth contributed based on the current time.
allows the contract owner to burn (destroy) their own tokens.
sell tokens for ether.
"function to transfer a token to a specified address, with additional requirements to prevent transferring to certain addresses and only allowing the owner to transfer."
"the code includes functions for distributing profits among shareholders and players, claiming profits and shares, selling tokens, investing in shares, and calculating scorers for team ids in a match simulator."
check if the contract is a crowdsale.
transfers balance from _from to _to if _to have sufficient balance.
transfer function with trading open modifier to limit transfer during trading.
return the balance of tokens owned by a specific address.
"creates a new subscription offer with various parameters such as price per hour, charge period, deposit amount, and start/expiry dates."
"update the eth price in cents by sending an oraclize query if the previous one has expired and there is enough ether, or if the previous query is still pending, or if the oraclize request fails."
add users and their allowed amount to allocation list.
get data about a specific redemption done on a specific address.
the buy tokens function in this smart contract code checks for valid purchases and calculates discounts and bonuses for approved beneficiaries before minting tokens.
find the owner and position of a jingle in the owner's array to remove it.
allow card owner to set his card on sale at specific price.
minter can pass its role to another address.
terminate contract and refund to owner.
the function disableminiswaplock () is call by the wallet contract once the token swap have reach it end condition.
rebuild the previous invest data back to the crowdsale.
passes asset ownership to specified address.
buys kryptor.
manually unlock 10 percent tokens in batch.
"performs a pass action on a specific board, only by the current active color player."
trigger a payout immediately if the data source has already been updated.
"this smart contract function allows the owner to allocate tokens to advisors, founders, and holders, and checks if the allocated amount exceeds the limit."
create hash data swap space.
"process a combat for a season, distribute funds to winners and partners, and log the results, ensuring enough gas is provided."
"self-destruct function for the smart contract, only accessible by the owner."
"this smart contract function updates the fee amount, which must be between 0 and 100."
set the token contract address as a one-time operation.
"main entry point for investors/players to invest in the market options and update their portfolio, with session end time and current lowest option number being tracked."
property owners can change their hovertext for when a user mouse over their properties.
send erc20 token to multi address.
"mark as scam function with minimum amount to flag and transfer of fees and insurance to owner and flagger, respectively."
this function allows the owner to change the gas limit any time during the fundraiser.
"transfer a non-fungible token from one address to another, with the condition that the receiving address is capable of receiving nfts, otherwise the tokens may be permanently lost."
the way to check be ico stage in variable time.
"only vault cancels a withdraw request, change the pledge state from paying back to pledged."
"this function adds a vesting user with a specified amount, and can only be called before initialization."
internal : test if a request exist when you know transactee and deposit.
add a list of addresses to a white list with a specified wei per contributor and cap wei for each user.
adding hodler stake to an account.
get player bet information.
proxy transfer hc token.
transfer tokens and redeem.
transfers tokens to either a contract or an address using the erc223 transfer function.
function to retrieve indices and balances of possible buyer balances for calculating possible withdraw tokens.
rents multiple plot out to another address.
signature bounty drop batch by single amount.
allows the current owner to transfer token control back to contract owner.
transfer funds between two addresses that are not the current msg.sender.
"terminate the contract and send all remaining funds to the specified address, but only if the sender is authorized."
add support a component.
set the crowdsale address and transfer heal tokens from ethealcontroller's sale address.
get the total supply of tokens at the current block number.
"sets the source address and logs the transaction, but only the owner can execute it."
claim tokens that be accidentally send to this contract.
buy an entire region with specified parameters and conditions.
function for the crowdfund to transfer tokens.
return the indices and balances of seller balances for a specific user to calculate their possible withdraw tokens.
mint tokens and add them to the balance of the message sender.
gets whether or not the specified address is currently an account minter.
mint a specified amount of token to a specified address and freeze it until a specified date.
get the class's entire information from the smart contract.
function for sign deal by buyer and for transfer money (call after sign seller only).
withdraw eth from contract to unlimitedip team address.
the owner can withdraw ether if tokens are received.
deletes the minter role to provide address.
updates the reward rate.
call this method to extract the tokens.
guarantees that gamble be under (statistical) safety limit for casino survival.
check if the ico event has ended.
price base on current token supply.
purchase a share from its current owner.
assigns ownership of a specific car to an address.
"the buy function has several requirements and transfers funds to various parties, with a ban on all contract calls."
allows investors to buy tokens for themselves or others by explicitly invoking the function using the abi/json interface of the contract.
only accepts callback from the oraclize.
allows an account to enter a high bid on a token.
get an array contain the address of all template proposals for a give st.
this function be trigger manually by owner to finish game after countdown stop.
change deposit fee.
this function is called when a user presses the button on the website or directly from the contract.
remove address from qualified partner list.
settle multiple transactions in a single call.
function to revoke permission of the manager.
arbiter's decision on the case.
"allows the admin to finalize a crowdsale, mark it complete."
calculates referral bonus.
reverts if not in crowdsale time range.
setvalue function updates a sequence at the next snapshot by storing the current snapshot id and value in an array.
submit a bid to reveal its properties in an auction.
this smart contract function is a token callback that transfers likecoin and gives artworks.
get total blue card.
"purchase a token from the previous owner, updating pools and paying fees and taxes."
add a new contract to the manager.
create stage function adds a new stage to the stage map and increments the stage count.
sets new manager.
updates an application to the latest version.
creates holder account.
get all block for a give address.
"retrieve submissions through this function, not submissions()."
drain any ether in contract to owner.
returns all the relevant information about a specific promotion.
"close method to be called by the owner after the sale deadline, minting any unassigned tokens to the multisig wallet specified by the client, finishing minting, transferring ownership of the token, and emitting a closed event."
"buys tokens in the crowdsale and rewards the caller, callable by anyone."
ensure that we don't reach the bitcoin suisse ether cap.
transfer ether balance to owner.
this function allows players to purchase a company from other players.
empty the crowdsale contract of dragons and forward balance to beneficiary.
assign a new address to act a the manager only.
to be call by owner on 1st feb to start ico till 1st march.
puts item on champ.
create a new game session request with specific conditions and verify the signature.
true if tokensale event have end.
allows the current owner to transfer token's control to a new owner.
return maximum borrowable token amount allow by ltd params.
"this function sets the error flag to true, which causes the contract to become non-functional."
closes presale.
function to set the crowdsale address.
function sets the activator of the cycle.
creates lock for the provided _beneficiary with the provided amount.
record _contributor.
change the owner.
redeems by allocating an ownership percentage only of requested assets to the participant.
find the oldest animal.
transfer ownership of tokens to another address.
unregister an auditor and return their unused deposit.
query the available balance of an address in erc-20 standard.
get record sender.
lets participants withdraw the fund if funding goal is not reached.
starts a poll for a listing hash which can be either in the apply stage or already in the whitelist.
return the usd value of a token id. (return 0.01 value in united states dollar.)
buy copper with ether.
allows an address to spend a maximum amount of tokens on behalf of the sender.
returns the storage location of number of tokens remain in crowdsale.
forward investor transactions for whitelisted investors in a sale that is not ended or paused.
convert bytes32 to string.
"token distribution initial function for the one in the exchange to be done only by the owner, and the function checks for various conditions before assigning tokens to an address."
returns the number lock of the provided _beneficiary.
starts the main sale.
change authorization for a specific contract address.
"the function allows participants to request redemption of a certain share quantity and receive a certain receive quantity of native asset or quote asset, with compliance checks and updates."
public function to be called by owner to change ico status to pause.
"this function allows users to purchase advertisement from a list and distributes commissions to the company owner, cfo, and shareholders."
"call by the owner to pause, trigger stop state."
withdrawal or refund for investor and beneficiary.
"convenience function to assign bounties/bonds for multiple questions in one go, then withdraw all your funds."
batch execution of reclaim expired swaps function.
allows execution if the any round start only.
grant pre-configured token grant in batch.
fills a buy order.
this function returns the empty groups on the board and their ids.
"validate a provided previously approve/sign order, hash, and signature."
withdraw dev's cut.
this function is called by both transfer and transferfrom to transfer tokens while taking into account pending rewards and intervals.
calculates bonus if preico sales still not over.
validate that a provided ecsda signature be sign by the specified address.
allows changing the withdrawable status for a specific round on a monthly basis for non-top investors.
maximum investments to be accept during pre-ico.
sell the token by withdraw from one of it connector tokens.
gatekeeper function to check if the amount of ether being sent is neither too small nor too large.
replace current owner with new one.
investors can allow owner to make transfer transactins on their behalf to enjoy zero transaction fee.
"a smart contract function for buying tokens from a seller, with various checks and calculations, and an event triggered upon successful purchase."
lists a bytes collection from start or end.
"function to set the exhaustion time in a smart contract, which can only be accessed by the owner."
allow an authorized user to claim remaining tokens after the contract has closed.
get correct total bp of the address.
find the corresponding participant (address).
"allow the owner to burn or unburn tokens, which affects the total supply."
receive a donation in btc.
transfers a cctoken owned by this contract to another address.
"admins and game can add players, and players cannot be removed."
allow to withdraw erc20 token from contract.
implements the logic for a token transferfrom.
offer a canvas for sale to a given address.
create a new payment channel between two parties.
"allow the owner to assign tokens to an address in an exchange, with various validation checks in place."
token owner can approve for spender to transfer from tokens.
sets the maximum gas refund when an address sends eth to buy tokens.
this is a wrapper function that calls and returns the result from the m5logic contract.
"this smart contract code allows for the retrieval of bonus percentages based on the current time, with separate calculations for pre-ico and ico periods."
true if the transaction can buy tokens override crowdsale validpurchase to add extra cap logic.
web3 function to change tokens from eth.
"convert the token to any other token in the bancor network by following a predefined conversion path, noting that when converting from an erc20 token (as opposed to a smart token), allowance must be set beforehand."
check if token sale is active based on current time.
transfer token for a user or another contract address for erc20 and erc223.
modifier that require the game be run.
get the resolver of a specified din.
allows to transfer mtc tokens.
a private function to create mobsters with various attributes and prices.
change the address of account registry to enable authorization of subject comment.
approve should be called when allowing a spender to spend 0 tokens.
method to withdraw erc20 tokens sent to this contract.
"add a new user to the exchange, create a wallet for them."
this function destroys the contract and transfers remaining tokens to designated addresses before self-destructing.
lets the organizer add a new data point.
subscription.
purchase a city by sending ether to the smart contract.
"internal transfer function with input parameters of sender address, receiver address, and transfer amount, which includes several require statements to ensure the validity of the transfer."
approves a migration and suicides the entire smart contract.
burn the unsold tokens.
trade function for exchanging tokens where the amount is denominated in tokenget.
get profit or loss function to calculate profit or loss in position token denomination.
get enter when users transfer tokens to this contract.
buy item from the market and apply to kittyid.
participate in the game.
gets the balance of the specified address at the first block minor or equal the specified block.
"this smart contract function allows for the purchase of tokens with ether, with checks for caps and goals, and logs contributions."
modifier to allow token creation only when the hardcap have not been reached.
returns the current price of a village.
"the function cwcfallback is used to get cwc and transfer uets, with various requirements and checks in place."
check if double the update interval has passed since the last successful price update.
add addresses to the whitelist.
erc20 backwards compatible transfer.
we use this function to purchase a build from a business.
allows the owner to set the exchange rate contract.
checks if a given address owns a particular tile.
starts a poll for a listing hash which can be either in the apply stage or already in the whitelist.
returns information about a subdomain.
"(uint8 currentrecordstate, uint8 recordstaterequired, uint8 entitystaterequired)."
allows the current admin to transfer control of the contract to a new admin.
setting the contract owner.
return existential state of a list.
cancel an subscription give by subid (a force version).
return the sell price of 1 individual token.
sender requests the close of the channel and starts the challenge period.
check if game lock can be removed.
generate a prefixed hash to mimic the behavior of eth_sign.
"remove controller function removes an address from the controller list and can be executed at any time in the smart contract's state, but requires the input address to be a controller."
transfer ownership of the contract to the new address.
mints additional tokens and new tokens go to owner.
transfer contract for a specified address.
get the owner of a country token.
"audit the reserve balance, in the base token and in ether, and return the token balance and ether balance - ledger."
set up stakeholders with specified percentages and token payouts.
"the function handles the transfer of pogs from the cryptogs contract to this contract based on a commit hash, with various requirements and checks in place."
"allows contract owner to terminate a vesting schedule, transfer remain vested tokens to the registered address and refund owner with remain tokens."
change current minimum of max participants.
distribute tokens in the contract to the contributors/creators.
"the function sells an equal number of tokens of all outcomes, exchanges collateral tokens, and sets the outcome tokens 1:1."
gets the token give a token id.
minimum_purchase_amt : the minimum ammount of tokens the buyer must purchase.
transfer a token to a specified address if the sender owns the token.
a member function to finish the mint process.
withdraw eth from the contract.
"function for voting on a dispute ruling during a specific period, with requirements for valid draws and ruling choices."
transfers vest tokens to the sender's address.
convert swap from multisig to htlc mode.
get the amount which spender is still allowed to withdraw from owner.
"kill method to end the smart contract, transferring remaining funds to feature development and emitting a fund transfer event."
allows the admin to whitelist address for a tier which be setup to be whitelist-enabled.
creates a new auction.
allow refund to investors.
transfer token for a specified address (basic token transfer method).
update the eth price for the token sale.
function to set/update vesting schedule for a specific address with principle and bonus lock amounts and periods.
returns the index and a boolean value indicating whether the given address is present in the array of addresses.
returns the balance of active holders.
returns list of owners.
function to start this sale.
registers a user wallet with a referrer and deposits any applicable bonus tokens.
external users can release their tokens when the time comes.
returns the topics for a crowdsale configuration event.
calculates the token price (wei / got) at the current timestamp during the auction ; elapse time 0 before auction start.
"finish competition function to sort and make competition scores, update competition status, and adjust rocket top speed based on initial rockets."
this function returns the total supply of tokens in the smart contract.
"purchase tokens and distribute dividends to players, with a portion going to the developer and referral balance."
distribute erc20 token to holders according to their ratio.
refunds all ether to the sender with the developer fee deducted and marks the sender as claimed.
issue tokens for a single buyer on the presale.
owner can change price of his days.
returns the length in run of the slice.
"this smart contract function allows the owner to allocate tokens to advisors, founders, and holders, and checks if the allocated amount exceeds the limit."
"starts preico, make preico contract owner, so it can mint."
"start the first bonus period of the ico with specific token sale lots, total supply, sale counter, limited sale, and bonus rates for different amounts of sms, and set the start and end dates of the ico."
buy a cat that is currently on offer.
storage location of the index of the current tier.
extra balance removal in case any issue arise.
freeze all token transfer.
validate a token address by verifying that the address belongs to one of the changeable tokens.
change exchange for this token.
"the function ""get policy details"" retrieves information about a policy, including group names, acceptance and decline limits, and total limits, based on the policy's signature and contract address."
admin function to transfer policy token balance from ether to this pool based on the rate set in the getx accord.
change the emission status of the contract.
assigns ownership of a specific state to an address.
register a new spid with rivetz as the sender.
puts item on champ.
disable burning only if burning be on.
this function allocates eth to a bankroll address based on a given div rate and checks if the bankroll address is valid before transferring the allocated funds and buying tokens if specified.
approveandcallpresigned allows a user to approve a contract and call a function on it.
manually trigger the steal by the script.
returns outcome tokens array.
allows team to adjust base price so price of the token have correct correlation to dollar.
"allows users to fund the capital of the smart contract, with certain conditions, and adds the capital to the treasury."
process crowdsale contribution without whitelist.
"a smart contract function for settling bets, which can be triggered by anyone but is designed to be handled by the dice2.win platform."
tokens of an address.
approve function does not allow any action and simply returns a boolean value.
transfer tokens from one address to another with allowance check.
"allows admin to change minbet, maxbet, and curpaytableid."
creates a new grey with the given name.
enable transfer function can be called by the owner after token sale and before listing.
"close the smart contract if the closing deadline has passed and the state is successful, which can be called by anyone if the sale is successful and the project is delivered."
transfer the balance from sender's account to another account.
query if a contract implements an interface.
allows company withdraw investments.
get the total balance of this contract.
transfers joker ownership to a new address.
remove a member from the network.
"this function approves a certain amount for a specific address, but allowances are intentionally not supported."
add member.
"called by token contract after approval, this function receives tokens, checks requirements, and initializes a flip."
this modifier restricts the execution of a function to only the owner of the smart contract.
"sets exception price in wei that differ from release price for single cat based on cat index, can only be executed by the owner."
requirement for the champ to be on sale.
function transfer tokens.
create a new sponsor contract.
"this smart contract function transfers a specified amount of tokens to a given address, with validity checks."
"manager use this function to confirm a operation confirm will not be call inside other function, so it can be external to save some gas."
sets the next sale contract.
sum of all remain vest balance (only the release part) release - withdraw.
this function allows users to create new kingdoms within the limit of available land.
creates a new proxy contract for an owner and recovery.
access modifier for manager-only functionality.
update multiple users' claim status and add tokens to their wallet.
"the smart contract function ""buy"" bans all contract calls and allows users to purchase items with a specified price, with taxes and fees applied, and a timer for withdrawals."
token symbol change function.
called by a delegate with signed hash to approve a transaction for user.
returns the amount of ibst allocated.
will release and make transferable any tokens eligible for release to avoid waste of gas.
"this function sets a new end time for a ballot in a smart contract, requiring ownership and testing."
add an administrator.
stores a tier's whitelist.
return the total supply of tokens.
allows the pending admin address to finalize the change admin process.
"simplified version of claim function, requiring users to call to claim."
"cancel pending transfer, can only be called by msg.sender."
sender deposits amount to the channel.
"this function creates multiple things at once by taking in arrays of ids and data, and checking for certain conditions before executing."
the function handles tokens by forwarding them to a defined account and sending the extra tokens to a cold wallet if the limit is exceeded.
can only be call during the period when halt.
allow update the max gas price.
emergency stop.
only owner will initiate transfer during sale.
join a game.
"check if an address is a valid destination for token transfer by ensuring it is not the zero address, token address, owner's address, admin's address, token offer contract address, or beneficiary address."
"add a new company with the given name, percentage of shares to release, cooldown time, shares in circulation, and price per share."
return the balance of the contract.
function which calculate the revenue of give block.
"initialize auctions parameters including start time, minimum price, starting price, and time scale."
"withdraws all dividends hold by the caller send the transaction, update the requisite global variables, and transfer ether back to the caller."
set allowance for other address and notify.
removes a list of address from the admins list.
sets the total certified assets and updates the certification status.
transfer token to new owner.
allow any user to set rabbit data with a signed message from coo.
"allows the contract owner to transfer any erc20 token, with safeguards to prevent errors."
send tokens from one address to another if the sender has approved the transfer.
called by owner when preico token cap have be reach.
transfer locked rewards.
"helps to generate collectibles/tokens/assets and transfer to eth cards, which can be redeemed using their web-app."
update multiple users claim status and add token to their wallet.
transfer function to move tokens from sender's account to recipient's account with balance validation.
converts a uint256 to string.
standard transferfrom overridden to have a chance to thaw sender's tokens.
"in case any eth have leave unclaimed after one month window, send them to vega round a address."
jury members can vote during vote period.
mint required amount of token.
an internal method that create a new kitty and store it.
restart function to send remaining balance to main player and self-destruct the contract.
sell a token from a contract.
granting transfer rights for a specific cutie through the transferfrom() function.
"this modifier only allows the distributor to call the function, and throws an error if called by any other account."
bonus period 2 - - - bonus 0-9 sms - 3 10-49 sms - 5 50-99 sms - 10 100 sms - 15 - - - time - - - (11 days 9 hours 59 minutes 59 second).
owner can propose an address change for notary.
function to remove an animal from egg phase can be call from anyone in the member address list.
initiates ico purchase.
add a new oraclize fund order.
abandons the ico and returns funds to shareholders.
creates a new token contract.
"function to process a transaction and create new tokens based on the amount of bitcoin sent, with various checks and updates to the contract state."
"stake on a specific country with a minimum stake requirement, developer fee percentage, and collected fees."
source of tokens.
"transfer tokens from the caller to a new holder in a smart contract, with conditions such as minimum transfer amount and available balance."
set individual stage1crowd cap.
enable stage.
unfreeze fund on account.
end the crowdsale.
total cap of the presale and public sale.
"this smart contract code allows users to register and modify items, using _id 0 to create a new item and modifying existing items otherwise."
add an owner.
return the sell price of 1 individual token.
update the allocation storage remaining balance.
"returns the total number of milestones ever created, including those that may have been cancelled."
"claims and clears cargo for a specific asset and star id, only accessible internally."
this smart contract code adds a score to a game competition.
this smart contract code adds an owner to a wallet and requires confirmation before execution.
decrease user balance.
internal function for handling eth refunds during stage three.
set the rate for time-based sales.
token for wei accord to course.
checks how much _spender can withdraw from _owner.
get exist or register new pid.
locks the vault for the two wallets.
unfreeze the amount of tokens by the owner.
unfreeze frozen amount everyone can call this function to unfreeze balance.
"updates the cap of the contract, but only if the new cap is greater than the amount of wei raised."
set the amount of token sale to approve allowance for sale contract.
this function is used to check if an account has any pending orders.
call by the owner to stop the ico.
set new authenticate address for registrations.
"add an ether deposit to the contract, only allowing the owner to deposit and with a minimum value required."
set maximum wei for verification levels during tge contribution preparation state.
approve tokens for sell .
"finalizefunding () end the campaign by call set the controller to 0, thereby end the issuance of new tokens and stop the."
this smart contract code retrieves the maximum amount of wei to raise for a crowdsale.
this function updates the mappings when a transfer occurs.
update a user's invested state.
"the function buys tokens and requires certain conditions to be met, including a minimum investment and sender approval, and sells tokens to a specified address."
function transfer airdrop tokens to multiple beneficiaries by subtracting tokens from private sale supply and minting them to the respective addresses.
use this function to add a member account to the array memberacct.
total number of tokens initially simplify from wei.
"finalize the liability by verifying the result, signature, and agreement, transferring tokens, and recording the finalization."
get the resolver of a specified din.
withdraw function can only be called by the owner and transfers tokens from one address to another while deducting a fee for the collector.
log diary entries with time stamp.
deposit ether in the account.
"this function calculates the new hero genes and power after training, taking into account dungeon difficulty, equipment, training times, and floor genes."
calculates the final score of a participant by adding up their individual scores throughout the tournament.
allows to change the address of the current horsey contract.
"this smart contract code retrieves the current rate of a specified erc20 token for buying or selling, taking into account any imbalances and rate updates."
check if a blob exists by verifying its block number.
executes the transaction.
mint tokens with _amount to the address.
get bonus percent based on current time and check all bonuses in already deployed contract.
unlock and transfer funds to participants who have met the necessary requirements.
"true if burnt successfully, false otherwise."
this function allows both parties to exit the swap state.
connect to battle contract.
"the function 'buy' allows users to purchase tokens based on the input address, value, and time, and will sell tokens if there are enough after calculation."
"mint vested tokens with grant options, allowing the owner to mint tokens instead of transferring them."
buy copper with ether.
allows the token owner to transfer control of the contract to a new owner.
"check if a pool has ended and restart it if it has, with the function being public."
allow transfer of tokens back to owner or reserve wallet.
checks whether fund soft cap be reach.
check the state of a crowdsale and adjust it accordingly.
symbol of the token.
update prices for a list of assets with new prices.
modifier to scope access to coo / / revert.
"function to check if the _price is the price of the license, returning true if it is and requiring the sender to be the token."
transfer tokens from one address to a contract.
burn tokens from the specified address.
proof that term and condition have be read and understood.
transfer ownership function allows for the transfer of control to another account in case of owner account compromise.
forwards a move to the corresponding game contract if the data has been signed by the client.
allows the owner to close sale.
allow update the max gas price.
check the state when validate a purchase.
claim ibc tokens if sale stage is ico or closed and sender has a balance greater than num_.
will transfer to select address a load of tokens - user supply of tokens must have enough balance.
gets the total raise token supply.
get the index to access a section object from its section identifier.
check if a chibi token has the necromancer trait.
complete moderatorship transfer.
set the conversion rate for pre-dgz owners and adjust the available tokens for sale based on the rate and previous sales.
transfer tokens from the sender to the specified address.
lift a ban plan for yearly.
this function returns the balance of the given address.
"calculate new price based on current selling price with a hard-coded value appreciation of 2x from a contract price of 0 eth to 0.05 eth, resulting in a 1.2x increase."
get the time-based bonus rate.
performs distribution of send bmc tokens and send them to profiterole address.
to take a tree out of the market without selling it.
"given an amount in etyc, this method return the equivalent amount in mini-etyc."
check if the address is registered for presale.
start pre ico.
the normalize pledge function checks if the pledge should be committed and only affects pledges with the pledged pledge state.
disable investment in specified assets.
creates a new blob using provided nonce.
this modifier restricts access to only the owner of the smart contract.
called by owner to transfer tokens - managing manual distribution.
get information about a specific round's investment by index.
admin initiates a request to transfer a child contract to a new owner.
post image data to the blockchain and log completion.
this function is used to vest tokens to the founding team.
allow users to make offers for token resale with a minimum resale percentage that will be automatically accepted.
allows the owner to send tokens to investors who pay with other currencies.
used to transfer fund on behalf of one person.
this function allows the owner to recycle tokens from a specific address to exchange for other tokens.
function which calculate the revenue of give block.
calculate the total number of passed interest cycle and coin value.
validates the signature.
create a new series.
"this function processes the sale of stakes, sets the stake price, calculates team and sale stakes, and distributes them accordingly."
resets the reclaim address to address (0) in a smart contract code.
create a new timelock to replace the old one during the migration of a vault.
transfer and lock token for a specified address.
submit a bid to reveal its properties.
pause the game prevent any buy.
modifier for function that can only be executed by an administrator.
get a license's issuetime.
checks if the sender be whitelisted for the presale.
"unregister fund status for an address, address must be empty for that."
can only be called after presale is concluded.
to transfer back any accidental erc20 tokens send to this contract by owner.
implementation of the standard transfer method that takes into account the finalize flag.
returns the number of tokens owned by a specific address.
set the exchange address and handle the nomination process with a 7-day time limit.
"starts a tournament with a maximum participant count, conducts rounds of fights, distributes rewards to winners and losers, adds to the jackpot, and updates player win counts."
"check if the stage is in the ""ended"" state."
remove the for sale flag from a section in the smart contract code.
set an upgrade agent that can handle upgrades.
erc20 standard method to give a spender an allowance.
checks whether the period in which the crowdsale be open have elapse.
gets days for which an address be lock with locked index.
"this function allows the owner to allocate tokens out of the bonus pool to a specified beneficiary, as long as they are not on the blacklist and the allocation amount is valid."
calculate the total cap of the presale and public sale.
all pending operations will be cancel !.
checks for token ownership.
used to withdraw the balance when the round be complete.
"owner - allocate tokens to advisors, founders, and holders, and track their allocations and bonuses."
throws if call by any account other than the current owner.
allow adjustment of the close time.
extend parent behavior to require purchase to respect the contributor's fund cap.
transfer action between users.
"function to get the top 150 users who are awaiting the transfer of tokens, can only be called by the owner, and works in read mode."
returns a list of all warrior ids assigned to an address.
may reroll one kitty move.
calculates how many tokens have not been sold in the pre-sale.
granting/minting of market coins by the owner.
method to get the ico rate with bonus based on the current date.
"a function for transferring tokens with various requirements such as sender lock, transfer limit, and time limit."
do common multisig verification for both eth send and erc20 token transfer.
"batch transfer function allows the owner to transfer tokens to multiple recipients at once, as long as the total amount being transferred does not exceed the owner's balance."
register new policy rule.
sell the token by withdrawing from one of its reserve tokens.
creates the presale vault contract.
the tokens are not transferable.
set the new endtime of the released time of an account.
allows the current owner or operators to remove operator.
allow users to register their new public key to map holder's tokens to new blockchain tokens.
internal function to remove a deed id from the list of a given address.
"set up a horse race with a delay and locking duration, and place an oraclize query to get the necessary information."
calculate the total number of passed interest cycle and coin value.
sets winning numbers for a raffle and emits a log with relevant information.
pauses the mvm.
this function updates a sequence at the next snapshot by setting a new value in the storage array.
function to add a new event from the human team.
changes the total supply value.
allows the owner to unauthorise an address from approve or request the transfer of eth and erc20 tokens.
function for participating in the contribution period.
this function sets the server side address.
"allocate tokens to advisors, founders, and holders with specific amounts and bonus eligibility."
creates a new gen0 pony with the given genes and creates an auction for it.
logic run whenever a reload order be execute.
call by the owner to transfer 'wei amount' wei to 'beneficiary'.
sets the oraclize address resolver for local development.
mint extra tokens and distribute them to the team and community holders.
mint function allows users to earn rewards through proof of stake and adds the reward to their balance while deleting their transfer history.
remove proof of a source only if present and only by the identity owner.
function for creating a deal by agency owner only.
get start position and length of the data.
calculates gross asset value of the fund by iterating through owned assets and calculating their holdings and prices.
"set policy for requiring signed address from investor, which must be clear on the server side first, can only be done by the owner."
returns all the relevant information about a specific pony.
allow a user to claim an item using their redeem code.
distribute the given amount among the surviving characters.
check that we can release the token.
verify an order that the exchange have receive involve this wallet.
any c-level can fix how many second per block be currently observe.
buy a specific ad.
changes auction price function parameters before auction be start.
allow the cfo to withdraw balance available to this contract.
generates random modulus.
returns natural exponential function value of give x.
mint tokens for a whitelisted user during the presale based on the transaction value.
whitelist function.
"this function allows an address to manually withdraw their bid from an active crowdsale, with a refund amount calculated based on the remaining time and their contribution."
"this function allows the owner to transfer a batch of tokens to multiple addresses, with the requirement that the total amount being transferred matches the balance of the owner and the length of the address and amount arrays are equal."
"called by the arbitrator to resolve a dispute in an escrow transaction, with the transfer of funds to the appropriate party and deletion of the escrow."
returns balance of an address.
converts a given number to base58 with a limit on the maximum length of symbols.
check if a game lock can be removed.
allows the owner to mint new tokens.
allows the owner to finalize the sale and allow tokens to be traded.
"set time, pre-ico early, pre-ico, and ico in days."
withdrawal function for the contract owner to transfer the contract balance to their address.
investment function for players to invest in different options with a minimum stake and updates player portfolio and market options.
bust price (sai per skr).
execute the first transaction in the pending transactions queue.
accepts ether and create new allstocks tokens.
this function allows the owner to modify the cap for a contribution level.
set the owner of the smart contract to the dx-proxy upon deployment.
"to be call when ico be close, burn the remain tokens but the owners share (50 000 000) and the ones reserve for the bounty program (10 000 000)."
sell tokens to the contract.
function to add an investor to the list and send tokens to them if the total tokens sold is not exceeded.
checks that a rate is valid.
remove wallet from whitelist.
return 10 ads beginning from the specified start index.
calls the nft contract with the tuned attribute.
if there be any issue / attach with refund owner can withdraw eth at the end for manual recovery.
modifier for accessibility to add deposit.
allow fund wallet to remove ether from contract.
"escbdevmultisig can use this function for allocation tokens for escb foundation by each stage, starting from the 2nd."
"deposits, withdrawals, balances."
"invest in tokens using a signed address, recognizing the payer and clearing their address."
returns an array of active buildings of a specific type owned by a specific city.
determines whether a value be equal to or less than another.
add a loopring protocol address.
here go the implementation to return the address of the crowdsale token in the ico processor.
internal (read only) : use in masternoderegister and deregister.
"creates a new promo region with the given name, with given _price and assigns it to an address."
this smart contract function performs actual token sale process..
add an address to a pixel's approved list.
access modifier for doge and robot functionality.
"withdrawing tokens according to a vesting rule for team, advisory, and reserve."
"check if the purchase is valid based on the cap, period, and non-zero purchase."
renews a subscription.
allows admin to permanently add a paytable (once per day).
gets the historic eth euro rate.
tokenaddresses - returns an array of underlying token addresses.
bool whether _account have vote on the proposal.
initialize new contract.
calculate each order's fee or lrc reward.
returns the total number of scheduled unlocks.
this contract defines a modifier and a few useful functions.
"this function finds the winners of a fundraising campaign based on their contribution amount and distributes the prize pool accordingly, with additional random winners selected if necessary."
"admins and game can add players, and players cannot be removed."
create new ppc tokens.
get the expected amount of a payee.
this smart contract allows backers to receive a refund in eth by calling the withdrawpayments function after calling the refund function with the amount of redpilltokens they received.
sell the token by withdrawing from one of its connector tokens.
investing function that recognize the payer.
get data about a specific redemption done on a specific address.
transfers a tulip to another address without confirmation.
fill buy order partially if possible !.
burn the rest keep nuc and team tokens.
set the waiting time for daily reward.
access only to the coo-functionality.
check whether register in lock address or not.
this function updates the mappings when a transfer occurs.
returns token balance of user.
get the balance of an _who address.
true if tokensale event have end.
to get the withdrawal address.
allows the owner to add a race address for race validation.
check if hard cap goal has been reached.
give bonus to all partners and allow owners to withdraw it soon.
returns the potential payout from a bet.
approve be not allow.
set the arbitrator to a new address.
vote for only sbi tokens owners.
"set the start time and deadline, with a check to ensure the deadline is after the start time."
transfers tokens to an icap address after performing necessary checks and emitting transfer events.
get description of specify token.
recover tokens sent in error by transferring any erc20 token to the owner.
get the current tranche or bail out if there is no tranche defined for the current timestamp.
ensures that the username is not taken and the account does not already exist for the user's address.
"claim the fund, and close the channel."
allow owner to transfer out the token leave in the contract.
release tokens to buyers during mainsale with a requirement by eidoo's icoengineinterface.
release the 2nd year locked token.
check if an address has this role in the storage.
check if the transaction can buy tokens within the cap and if the purchase value is nonzero.
function to continue distributing rewards to token holders until the maximum number of steps is reached or the profit distribution round is complete.
"this function collects fees from all active defined games and, if a game has ended, attempts to pay the winner and move it to the ended games list."
settle an investment and distribute tokens.
ends the crowdsale.
proposes to transfer control of the trustee contract to a new owner.
gets a position at the given index.
override crowdsale valid purchase to add whitelist logic.
"call by the owner to lock, trigger lock state."
allow owner to transfer out the token leave in the contract.
add to the counter.
unlock the tokens.
put an accepted donation in the book.
allows someone to send ether and obtain a card.
set the rate.
"returns information about a specific crowdsale tier, including its name, sell cap, price, duration, modifiability, whitelisting status, and minimum investment amount."
assigns ownership of a specific rabbit to an address.
allows a user to get her current discount/rebate.
function to disapprove a single user which mean the user have fail the kyc check can only be call by the owner.
remove _account from the whitelist.
mint tokens and add them to the balance of the message sender.
claim token after token sale based on stake.
burn pool - inactive supply.
buytokens process token purchase.
may only be called by the owner address.
this function approves tokens for sell in a lottery contract.
checks whether the given address is whitelisted for the presale and sale.
get balance of an account.
set the resolver of a din.
burns a koda token.
call by the delegate to grant tokens to a recipient.
initialize auctions parameters.
token contract transferfrom.
prevents accidental send of eth when you shouldn't.
get the token id of a player's token.
collect accrue interest reward (receive stake profit).
to enable pause sale for break in ico and pre-ico.
low level token purchase function overridden to allow for calculations based on the ico phase.
increase the airdrop count to allow sweet humans ask for more beautiful lemon tokens.
finalizes the sale.
update affiliate level by owner.
release locked tokens owned by an account with only one lock time and no release stage.
is ico finished ?.
mint function to add tokens to a target address.
override low level token purchase function to send data to valid purchase().
erc 721 transfer from function.
bonus tokens accrual.
check if the current time is within the start and end time to determine if the sale is open.
function that return the (dynamic) price of a single token.
resets the period with the duration of the current period.
"bulk transfer tokens to a list of specified addresses, not an erc20 function."
receives a donation in eth.
methods use by the ico investors.
add new beneficiary to start vest.
withdraw 'amount' of ether from the contract and send it to msg.sender.
"calculate the amount of token the user will get, which can overlap on multiple tiers."
maximum investments to be accept during the sale (in wei).
allows the owner to finalize the sale and allow tokens to be traded.
claim tokens by a owner address to add them to their balance.
remove a list of wallets to be allowed to take part in pre-ico.
erc223 transfer cwcs with data.
"if the goal is reached, the vault will be manually closed."
"set an auction object for a game address with specific end time and banker time, and emit an event if the game address is not whitelisted."
true if bountyfunds function have end.
reduce digital artwork tokens for change physical artwork.
closes the contract and transfers the balance to the team wallet if the balance is below the minimum withdrawal amount.
allow the owner to remove bouncer address.
this smart contract code calculates the fixed logarithm of a given number with a specified precision.
returns the usd value of ether at the set usd / eth rate.
claim previously purchased tokens for an account.
"give back cc and get a refund back in cln, dev can only be called after sale end and the softcap not reached."
recall capital by removing bankroll from a bankrollable address.
set the length of time a vote run for.
claim win prize by the user.
place bet to team.
this function returns the block number after which the tournament will be open for admission.
pause their open bet.
returns the rate of tokens per wei at the present time.
submit a bid to reveal its properties in the smart contract.
view function that show the freeze balance of an investor for future airdrop.
sale modifier checks if the token sale is open based on time and status.
returns the number of nfts owned by the specified owner.
update capital with a condition on capital and fee factor.
using this function a spender transfer tokens and make an owner of fund a participant of the operate jackpot.
set the new rate.
look up for the owner role on provided address.
this function prepares the round participants for the random number generation.
ascend the list (small key to large key) to find a valid insert position.
place a bid on an auction with a value.
transfer tokens to bounty partner(2).
sets an entire region's cloud image data.
create an illiquid balance which can not be traded until the admin makes it liquid.
allocate tokens to a specific address based on the type of allocation requested and return whether the allocation was successful or not.
throws if call by any account other than the blacklister.
drain tokens that be send here by mistake because people will.
remove from balance.
helper to pause catoken.
"this smart contract function retrieves astro indexes by page and filters out certain types, with checks for valid astro and index boundaries."
buy tokens by sending ether and receive tokens in return during the ico.
this function allows admins to transfer ownership of a city to a specified address and distribute a boost to the economy for all other city owners in the same country.
add investor function to allocate tokens to an investor and require them to hold a minimum amount for a specified time period.
tokenunits number of token base units require per creation unit.
get the bound box (in metres) of this property.
called only by seller child contract when a name be purchase.
validate certification for a student.
"a vote on the target account have conclude, but the motion have not yet be approve, vetoed, or close "
moving date after the pause.
accumulate the purchased tokens to the total raise.
implementation for transfer exh token to provide address.
append decrypted bid data to the contract for final calculations.
create a new promotion event.
train a special personality for a kitty by frontend.
gets total amount of bonuses user have during all distribution periods.
transfers tokens to a specified address and executes a custom fallback function if the recipient is a contract.
notice transfer _value h. n.
modifier for share manager function.
set the registration fee.
owner can add precommitment fund token balance before the crowdsale commence.
retrieving gift info by gift id.
sets new rate for receive foreign token.
"scan for a game 10 minutes old, if found, abort the game and return the funds."
register a certificate administrator.
perform an ether swap and activate it through the fallback function after receiving ethers.
function to distribute tokens to a list of addresses by providing various amounts.
gets number of remaining tokens.
self-destruct the contract.
this function checks if a partner has been validated by calling the hydro api.
"buys tokens with ether, exchange them 1 : 1."
allows the owner to set the crowdsale address.
transfer team tokens to target address.
withdraw the token.
get cat with no owner at specify index by pay price.
function to finish a competition by sorting scores and updating competition funds remaining.
current phase is the deposit phase in the initial stakes cycle 0.
"allows an account to buy a nft gan token that is up for offer, the token owner must set onlysellto to the sender."
create a new tap proposal by token holders in withdraw state.
compute the proportion of an amount with maximum precision by multiplying the part and total with the same units.
internal transfer function which skip check - use carefully.
allows _spender to spend a maximum of _value tokens in your behalf.
transfers '_value' in wei to the '_to' address.
allows the owner or minter to manually set the token price in wei.
have a pregnant monster give birth!
withdraw dth when shop delete.
"allows the contract owner to add segmentation for a user's address, times, period, and tokens."
function icotokens - calculate tokens in ico.
get current rate from oraclize and sell tokens.
budget control.
a transfer function that allows for transfers.
set the target crowdsale for moving presale funds when the crowdsale opens.
function to change vanity url 1.
remain number of tokens.
check if the address is valid by checking if it is not equal to 0x0.
deleteaccount delete user 's claim token.
removes allow contract from the list of allowed contracts.
this smart contract code allows for refunds to a give address.
get the number of address that have contribute to the sale.
implement erc223 interface.
boom price (sai per skr).
sets a new multiplier for free a horse.
this function continues the distribution of token rewards until the maximum number of steps is reached or the profit distribution round is complete.
get the metadata of a leaderboard.
number of wei that payee be entitle to collect.
freeze a certain amount of tokens owned by the contract owner until a specified unfreeze time.
this function clones a proposal from the last contractor.
this smart contract function calculates the total withdrawable amount in eth for a given address by converting shares to eth.
check whether contract is currently active.
change the price of creating an amount to add a tower.
calculate the annual interest based on the current time and stake start time.
transfer forward a number of potatoes to the request address.
checks if a specified address has asset owner or co-owner rights.
creates hkg tokens.
put a cutie up for auction.
modifier to prevent execution if ico have end or be hold.
get the time-based bonus rate.
transfer tokens from one address to another through an allowance previously set up.
"internal function to initialize payees for a request, avoiding ""stack too deep"" error in createrequest()."
destroy the wallet and send all ether to the sender.
trim the given array to a given size.
to set the address of the crowdsale in order to distribute the tokens.
"allow another account/contract to spend tokens on your behalf, throw on any error rather than return a false flag to minimize user errors, and minimize the risk of the approve/transferfrom attack vector."
"ends a round of the game, calculates the winner and distributes the pot among the winner, team, and platform."
"sender initiates a challenge period for a channel with a specific receiver address, open block number, and balance."
unlock the tokens.
check that we can release the token.
finalizes the precrowdsale and sends funds.
facilitates the assignment of investor address and amount (only before contract be finalized).
pauses the market and disallows any buy item and buy item and apply.
function to transfer tokens to a receipient.
updates the counter for the amount of ether pay.
"check if the user is the winner of a legit horse race and return the name of the winning horse (ltc, btc, eth, etc.)."
creates a new contract for a vest fund that will release funds for the beneficiary every quarter.
function be call by contributor to refund payments if crowdsale fail to reach soft cap.
"get the amount of foreign tokens or wei based on the token address and token amount input, using the stored conversion rate."
accepts ether and create new allstocks tokens.
"send tokens to contributors after the ico, based on their received wei and dollar per ether ratio."
"if the specified address is in the owner list, remove them - this can be called by descendants to ensure the database is kept up to date."
allows a function to be called only by the minter.
transfer tokens from the sender's account to another account if the sender has enough balance and the transfer value is greater than zero.
convert wei to tokens based on the rate.
get list of tokenids of token group a user contribute to.
transfer tokens from the caller to a new holder in a smart contract.
this function can be called after the swap is tokenized or after the calculate function is called to force pay long and short token holders.
this smart contract code sets up the parameters for an open distribution.
"complete pending approval, can only be call by msg. sender."
reclaim all erc20 basic compatible tokens.
load early purchase from the contract keep track of them.
transfer different amount of tokens to multiple beneficiaries.
add a modifier to prevent sending value greater than a certain amount.
release the 2nd year locked tokens.
allows users to create tokens if token creation is still ongoing and the cap has not been reached.
return all relevant data for an animal.
preallocate a liquid portion of tokens.
"increase the approval limit for a spender in the smart contract, but only if the contract is not paused."
sets an entire region's cloud image data.
sends all the funds to the big sister and can only be invoked by her.
allows users to bid for a pixel auction.
this function approves a remove owner request and can only be called by an owner who has not previously called this remove owner request.
removes a reserve token list.
rollback a contract to a specific version using the provided contract identifier.
"bulk transfer tokens to a list of specified addresses, not an erc20 function."
set the status of the ico stage.
execute token repartition on a dispute for a specific number of votes.
storage location of team fund wallet.
advance step of campaign to main sale.
create new gift.
this function burns amount tokens from owner.
this function withdraws the contract owner's cut.
transfer back remaining mana to the specified account.
returns price of _tokens _orderprice be price per 1e18 tokens.
extract an address from a bytes at a given position.
owner initiates the transfer of the token to another account.
set many pixels with one transaction.
"queries the list with _offset and _limit of voters, candidates chosen, and msp amount at a specific _block number."
allows the current admin owner to transfer control of the contract to a new owner.
retrieve last winner address.
get token balance of a specific address.
set pending wallet fee with specified address and fee in basis points.
"function for investments in a smart contract that calculates the number of tokens to be bought based on the rate and checks if the purchase amount meets the minimum requirement, with additional conditions for pre-ico and ico periods and a hard cap limit."
create a new subscription offer.
unpause method: unpauses the token allocation process.
transfer the admin role to a new address.
"sell tokens based on input values and time, throwing an error if there are not enough tokens after calculation."
proxypayment () allow the caller to send ether to the campaign and have the campaigntokens create in an address of their choose.
set authorized address for changing authorization in presale or crowdsale.
"only admin can mint tokens after the sale has ended, with a limit on the maximum number of tokens and the multisig address provided by the client."
dispatch dividends to former owners of a country.
"the function ""buy"" allows players to purchase tokens within certain limits and updates their balances accordingly."
a smart contract code for airdropping tokens to a list of addresses with equal distribution.
get the token purchase state for the given token.
function enables transfer and can only be executed by the owner.
removes a signature from this contract.
calculate and process the timelock state of an account.
allow the owner to change the recipient multisig address.
fetches the detail relate to the sale.
gets the number of remaining shares that can be bought or sold under this order.
owner withdrawal of an ether deposit from token ether balance.
allows owner to withdraw fund from the account.
create the token to be sell.
manually trigger the steal with specific gas.
"function to buy troops in a pvp game, with requirements for index, count, price, and player funds."
this function prepares the round participants for the random number generation.
return a list of promise ids that match the given criteria.
token sale state machine management.
reveal multiple curves at once.
return the total supply of tokens.
totalsupply uint256 led token total supply.
if caller be one of wallet owners function revert his confirmation for transaction number i.
get info by game.
allows the owner to transfer erc20 tokens to the multi sig vault.
overload to require ico success.
changes the controller of the contract.
function to update exchange rate.
set the contract address for migration opt-in.
true if tokensale end.
change the owner wallet address.
get current rate from oraclize and transfer tokens.
sets the maximum value in ether to purchase tokens.
public function user submit bet only if game be active bet be valid can query oraclize and set user vars.
assigns ownership of a specific state to an address.
load early purchase from the contract keep track of them.
"this function records a purchase made during a crowdsale, calculates the bonus amount, and adds the purchase to the list of crowdsale purchases."
function checks if the soft cap has been reached.
"function to attach a specific liquidpledging instance to this lpvault, which can't be undone and is only accessible by the owner."
"throws if dungeon status do not allow train, also check for dungeon existence."
crowdsale participation.
create a mintable token contract.
dev function for withdrawing reserved amount if minimum target is reached.
method to check the user balance.
assign the proceed of the buyout.
purchase a share from its current owner.
sets a lockup for jishis by the owner.
set price of ntry correspond to ether.
deploys new tokens on a drct_token contract - call from within a swap.
public function to close a masternode and return the deposit eth to the owner.
"this smart contract code processes an order by matching it against a book and executing funds less fees, with the option to refund unmatched orders."
"deposit for investor, return transaction id."
"accept nonce and check if it passes proof of work, then reward if it does."
a function that returns the current time in uint format.
"claim the reward for a bid, only callable by the publisher, with a separate function to define who pays the gas for transferring the reward."
this function allows players to purchase a company from other players.
"fund capital function allows users to buy tokens and add capital to the treasury if the sale has ended and the soft cap has been met, with the option for refunds if the amount sent exceeds the required amount."
"contributors can claim tokens after public ico is finished, tokens are only claimable when the token address is available and the lock-up period has been reached."
get the customer 's tx of payment for mcw data - tx of original mcw transfer in ethereum network which be record in the tx.
claim tokens for team reserve wallet.
checks that a given warrior can participate in pve battle.
"issuer can reclaim remain unclaimed dividend amount, for expired dividends."
set tokens for crowdsale if exchange rate function is not called.
this is an owner-only function that allows for the massive minting of tokens to multiple addresses at once.
"send eth to destination using two signatures (v1, r1, s1) and (v2, r2, s2)."
stops all token transfer in case of emergency.
fund withdraw to backers if crowdsale not successful.
get the current price of hkg per 1 eth based on different milestones.
add a new company with the given name.
transfer remaining tokens after the completion of crowdsale.
allow owner to add address to whitelist.
approves a proposition of a company token split.
grant authorization between account and service provider on buyers' behalf only accessible by contract owner.
only the reviewer can approve a specific milestone in this smart contract code.
indicates whether or not the given bet is a valid bet.
allows to change the eth daily transfer limit.
propose allocation of tokens to a destination address with a specified number of tokens per period.
return the number of days left until the date of withdrawal for a deposit item.
returns the current price of a sale.
end presales.
"split user bet into different portions for bank, contract developer, sponsor, stock, and referral (if applicable)."
set operation gas amount for forwarding operations.
transfer token for a specified address internally.
generates _amount tokens that be assign to _owner.
recover all funds in the contract to the address of the owner.
purchase tokens for the amount of ether sent to this contract for a custom address.
returns the total number of payments that have ever been authorized.
withdrawal or refund for investor and beneficiary.
"bid in an auction, requiring whitelist status and minimum bid threshold, with bonus options for private sale participants and remaining funds to end auction calculated."
calculate player profit if player has won in a dice game.
declares a public offer plan to make company's tokens transferable.
unlock a token by index and update the lock records and balances accordingly.
get a list of accounts starting from a specified index and with a specified count.
"update the address of the sanctuary contract, can only be called by the admin."
claim all vest tokens up to current date for myself.
upgrade function transfers all the contract's ether to a proposed new disbursal contract via the standard receive ether function.
ensures the sale has been configured and has not finished.
owner can issue new tokens in token contract.
this function can be called after the swap is tokenized or after the calculate function is called to force pay the long and short token holders.
makes checkmark and deposit tokens on profiterole account to pay them later a bonuses for treasury share holders.
"service provider settles with seller and keeps a small percentage of the funds transferred, which is set in setservicefee and stored in feebasispoints, and can only be accessed by settlers."
everyone need to call this function should the minimum cap not be reach refund the sender.
save the random number for this blockhash and give the reward to the caller.
function returns the amount of tokens that a spender is allowed to transfer on behalf of an owner.
swap two elements of a list.
"add a new entry to a list of donkeys, with the amount invested being used to calculate their position in the ranking, and a fee being deducted from the balance."
converts bytes to base32 format in a smart contract function.
set url prefix.
0 - stop 1 - presale 2 - sale 3 - bounty first 4 - olympic game 5 - bounty second.
pay dividends to token holders.
this function is called when ntz is deposited into the power pool to increase the authorized power and outstanding power of the contract.
"this function updates the period for dividend distribution and calculates the owner's cut, and it should be called by the owner twice a month."
penalize inactive jurors by deducting a portion of their tokens and arbitration fee if they fail to vote.
get the order's balance of tokens for account customer.
the mint function allows users to earn rewards through proof of stake and adds the reward to their balance.
this smart contract function refunds investors their balances in case of an emergency.
regular end game session implementation.
explicit getter for balance.
get the id and owner of a dapp.
returns the number of tokens that can be bought from the seller.
"event onbuytoken (address _buyer, address indexed _seller, address indexed _tokenaddress, uint256 _transtokenamount, uint256 indexed _tokenprice, uint256 _sellerramiantokenamount) ;."
"modifies the state of the contract based on the current time and duration of each state, with a soft cap countdown timer for the last state."
this modifier enforces permissions by only allowing the specified account to execute the function.
send ether to the fund collection wallet override to create custom fund forward mechanisms.
get the next cap as a function of the amount of sell token.
renews a subscription.
verify signatures and ensuring that they correspond to the given data and are made by the signer.
airdrop in batch.
allows investors to buy etc tokens.
transfer the sms balance from the caller's wallet address to the target's wallet address.
deliver tokens sell during reserve stage to correspond investors.
validates an incoming purchase.
"allow any user to set rabbit data, with a signed message from coo."
"sets the beneficiary address to receive the proceeds from fish in the aquarium, only accessible by the owner."
allocate tokens to pre-sell address.
moves capital to profit.
returns the number of contract created by this factory.
calculates excess balance and updates the balance of the buyer in case they send more than the maximum balance during token generation.
function to check user's guess and claim reward.
creates an erc20 transaction request to be stored in the contract's state.
"this function processes a purchase in a public sale, calculating the amount of tokens to buy based on the current stage and rates, and distributing them to the beneficiary while handling any remaining ether."
get token data.
get bonus percent by time based on the current phase of the sale.
"provides a registered token's metadata, look up by name."
make an investment.
get current rate from oraclize and sell tokens.
transfer the token ownership to the crowdsale contract.
"keccak256 order hash, part one."
only owner adjust contract balance variable (only use for max profit calc).
restricts access to only the issue manager and contract owner to issue tokens to eth address (issue admin).
this function is called by the client to remove a certain amount of tokens when granted by the central bank (state).
allows investors to buy etcl tokens by sending eth and automatically receive tokens to the provided address.
modifier to make a function callable only when the contract is not paused.
deposits arp.
check if the given token is either the left or right token of the token changer.
starts the crowdsale after the presale is concluded.
set the cumulative score.
"assign the proceeds of the buyout to the current owner, surrounding tile owners, and referral bonus, while also allocating funds to the prize pool and deducting fees."
this function allows the airdropper to withdraw ether back deposit to the smart contract.
transfers tokens held by timelock to owner.
confirms whether a kitty has chosen an action.
updates the maximum deposit limit.
withdraw some of the ether.
remove a whitelist address.
get lease from card.
"distribute eth based on fees to commission, affiliates, and external commissions."
change vote rule.
call to get the specify tile at a certain position of a certain board.
this function returns the ico rate with bonus based on the given date.
get dealer and lucky record.
sets the current balance of the board
erc 721 transfer from.
people can claim share from the company!
removes a user minter from the list of readers while keeping them in the audit history.
return the amount of good offer for a token pair.
to burn tokens.
distribute fund to all activities.
